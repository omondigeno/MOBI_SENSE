ca.uol.aig.fftpack.RealDoubleFFT -> a.a:
    double norm_factor -> a
    double[] wavetable -> b
    int ndim -> c
    void ft(double[]) -> a
ca.uol.aig.fftpack.RealDoubleFFT_Mixed -> a.b:
    void radf2(int,int,double[],double[],double[],int) -> a
    void radf3(int,int,double[],double[],double[],int) -> b
    void radf4(int,int,double[],double[],double[],int) -> c
    void radf5(int,int,double[],double[],double[],int) -> d
    void radfg(int,int,int,int,double[],double[],double[],double[],double[],double[],int) -> a
    void rfftf1$10ea1983(int,double[],double[]) -> a
com.github.mikephil.charting.BuildConfig -> com.github.mikephil.charting.BuildConfig:
    boolean DEBUG -> DEBUG
com.github.mikephil.charting.animation.ChartAnimator -> com.github.mikephil.charting.animation.ChartAnimator:
    android.animation.ValueAnimator$AnimatorUpdateListener mListener -> mListener
    float mPhaseY -> mPhaseY
    float mPhaseX -> mPhaseX
    void animateXY(int,int,com.github.mikephil.charting.animation.EasingFunction,com.github.mikephil.charting.animation.EasingFunction) -> animateXY
    void animateX(int,com.github.mikephil.charting.animation.EasingFunction) -> animateX
    void animateY(int,com.github.mikephil.charting.animation.EasingFunction) -> animateY
    void animateXY(int,int,com.github.mikephil.charting.animation.Easing$EasingOption,com.github.mikephil.charting.animation.Easing$EasingOption) -> animateXY
    void animateX(int,com.github.mikephil.charting.animation.Easing$EasingOption) -> animateX
    void animateY(int,com.github.mikephil.charting.animation.Easing$EasingOption) -> animateY
    void animateXY(int,int) -> animateXY
    void animateX(int) -> animateX
    void animateY(int) -> animateY
    float getPhaseY() -> getPhaseY
    void setPhaseY(float) -> setPhaseY
    float getPhaseX() -> getPhaseX
    void setPhaseX(float) -> setPhaseX
com.github.mikephil.charting.animation.Easing -> com.github.mikephil.charting.animation.Easing:
    int[] $SWITCH_TABLE$com$github$mikephil$charting$animation$Easing$EasingOption -> $SWITCH_TABLE$com$github$mikephil$charting$animation$Easing$EasingOption
    com.github.mikephil.charting.animation.EasingFunction getEasingFunctionFromOption(com.github.mikephil.charting.animation.Easing$EasingOption) -> getEasingFunctionFromOption
    int[] $SWITCH_TABLE$com$github$mikephil$charting$animation$Easing$EasingOption() -> $SWITCH_TABLE$com$github$mikephil$charting$animation$Easing$EasingOption
com.github.mikephil.charting.animation.Easing$EasingFunctions -> com.github.mikephil.charting.animation.Easing$EasingFunctions:
    com.github.mikephil.charting.animation.EasingFunction Linear -> Linear
    com.github.mikephil.charting.animation.EasingFunction EaseInQuad -> EaseInQuad
    com.github.mikephil.charting.animation.EasingFunction EaseOutQuad -> EaseOutQuad
    com.github.mikephil.charting.animation.EasingFunction EaseInOutQuad -> EaseInOutQuad
    com.github.mikephil.charting.animation.EasingFunction EaseInCubic -> EaseInCubic
    com.github.mikephil.charting.animation.EasingFunction EaseOutCubic -> EaseOutCubic
    com.github.mikephil.charting.animation.EasingFunction EaseInOutCubic -> EaseInOutCubic
    com.github.mikephil.charting.animation.EasingFunction EaseInQuart -> EaseInQuart
    com.github.mikephil.charting.animation.EasingFunction EaseOutQuart -> EaseOutQuart
    com.github.mikephil.charting.animation.EasingFunction EaseInOutQuart -> EaseInOutQuart
    com.github.mikephil.charting.animation.EasingFunction EaseInSine -> EaseInSine
    com.github.mikephil.charting.animation.EasingFunction EaseOutSine -> EaseOutSine
    com.github.mikephil.charting.animation.EasingFunction EaseInOutSine -> EaseInOutSine
    com.github.mikephil.charting.animation.EasingFunction EaseInExpo -> EaseInExpo
    com.github.mikephil.charting.animation.EasingFunction EaseOutExpo -> EaseOutExpo
    com.github.mikephil.charting.animation.EasingFunction EaseInOutExpo -> EaseInOutExpo
    com.github.mikephil.charting.animation.EasingFunction EaseInCirc -> EaseInCirc
    com.github.mikephil.charting.animation.EasingFunction EaseOutCirc -> EaseOutCirc
    com.github.mikephil.charting.animation.EasingFunction EaseInOutCirc -> EaseInOutCirc
    com.github.mikephil.charting.animation.EasingFunction EaseInElastic -> EaseInElastic
    com.github.mikephil.charting.animation.EasingFunction EaseOutElastic -> EaseOutElastic
    com.github.mikephil.charting.animation.EasingFunction EaseInOutElastic -> EaseInOutElastic
    com.github.mikephil.charting.animation.EasingFunction EaseInBack -> EaseInBack
    com.github.mikephil.charting.animation.EasingFunction EaseOutBack -> EaseOutBack
    com.github.mikephil.charting.animation.EasingFunction EaseInOutBack -> EaseInOutBack
    com.github.mikephil.charting.animation.EasingFunction EaseInBounce -> EaseInBounce
    com.github.mikephil.charting.animation.EasingFunction EaseOutBounce -> EaseOutBounce
    com.github.mikephil.charting.animation.EasingFunction EaseInOutBounce -> EaseInOutBounce
com.github.mikephil.charting.animation.Easing$EasingFunctions$1 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$1:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$10 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$10:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$11 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$11:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$12 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$12:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$13 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$13:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$14 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$14:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$15 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$15:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$16 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$16:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$17 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$17:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$18 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$18:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$19 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$19:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$2 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$2:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$20 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$20:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$21 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$21:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$22 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$22:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$23 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$23:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$24 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$24:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$25 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$25:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$26 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$26:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$27 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$27:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$28 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$28:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$3 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$3:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$4 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$4:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$5 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$5:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$6 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$6:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$7 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$7:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$8 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$8:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingFunctions$9 -> com.github.mikephil.charting.animation.Easing$EasingFunctions$9:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.animation.Easing$EasingOption -> com.github.mikephil.charting.animation.Easing$EasingOption:
    com.github.mikephil.charting.animation.Easing$EasingOption Linear -> Linear
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInQuad -> EaseInQuad
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutQuad -> EaseOutQuad
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutQuad -> EaseInOutQuad
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInCubic -> EaseInCubic
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutCubic -> EaseOutCubic
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutCubic -> EaseInOutCubic
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInQuart -> EaseInQuart
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutQuart -> EaseOutQuart
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutQuart -> EaseInOutQuart
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInSine -> EaseInSine
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutSine -> EaseOutSine
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutSine -> EaseInOutSine
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInExpo -> EaseInExpo
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutExpo -> EaseOutExpo
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutExpo -> EaseInOutExpo
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInCirc -> EaseInCirc
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutCirc -> EaseOutCirc
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutCirc -> EaseInOutCirc
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInElastic -> EaseInElastic
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutElastic -> EaseOutElastic
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutElastic -> EaseInOutElastic
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInBack -> EaseInBack
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutBack -> EaseOutBack
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutBack -> EaseInOutBack
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInBounce -> EaseInBounce
    com.github.mikephil.charting.animation.Easing$EasingOption EaseOutBounce -> EaseOutBounce
    com.github.mikephil.charting.animation.Easing$EasingOption EaseInOutBounce -> EaseInOutBounce
    com.github.mikephil.charting.animation.Easing$EasingOption[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.animation.Easing$EasingOption[] values() -> values
    com.github.mikephil.charting.animation.Easing$EasingOption valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.animation.EasingFunction -> com.github.mikephil.charting.animation.EasingFunction:
    float getInterpolation(float) -> getInterpolation
com.github.mikephil.charting.buffer.AbstractBuffer -> com.github.mikephil.charting.buffer.AbstractBuffer:
    int index -> index
    float[] buffer -> buffer
    float phaseX -> phaseX
    float phaseY -> phaseY
    int mFrom -> mFrom
    int mTo -> mTo
    void limitFrom(int) -> limitFrom
    void limitTo(int) -> limitTo
    void reset() -> reset
    int size() -> size
    void setPhases(float,float) -> setPhases
    void feed(java.util.List) -> feed
com.github.mikephil.charting.buffer.BarBuffer -> com.github.mikephil.charting.buffer.BarBuffer:
    float mBarSpace -> mBarSpace
    float mGroupSpace -> mGroupSpace
    int mDataSetIndex -> mDataSetIndex
    int mDataSetCount -> mDataSetCount
    boolean mContainsStacks -> mContainsStacks
    boolean mInverted -> mInverted
    void setBarSpace(float) -> setBarSpace
    void setDataSet(int) -> setDataSet
    void setInverted(boolean) -> setInverted
    void addBar(float,float,float,float) -> addBar
    void feed(java.util.List) -> feed
com.github.mikephil.charting.buffer.CandleBodyBuffer -> com.github.mikephil.charting.buffer.CandleBodyBuffer:
    float mBodySpace -> mBodySpace
    void setBodySpace(float) -> setBodySpace
    void addBody(float,float,float,float) -> addBody
    void feed(java.util.List) -> feed
com.github.mikephil.charting.buffer.CandleShadowBuffer -> com.github.mikephil.charting.buffer.CandleShadowBuffer:
    void addShadow(float,float,float,float) -> addShadow
    void feed(java.util.List) -> feed
com.github.mikephil.charting.buffer.CircleBuffer -> com.github.mikephil.charting.buffer.CircleBuffer:
    void addCircle(float,float) -> addCircle
    void feed(java.util.List) -> feed
com.github.mikephil.charting.buffer.HorizontalBarBuffer -> com.github.mikephil.charting.buffer.HorizontalBarBuffer:
    void feed(java.util.List) -> feed
com.github.mikephil.charting.buffer.LineBuffer -> com.github.mikephil.charting.buffer.LineBuffer:
    void moveTo(float,float) -> moveTo
    void lineTo(float,float) -> lineTo
    void feed(java.util.List) -> feed
com.github.mikephil.charting.buffer.ScatterBuffer -> com.github.mikephil.charting.buffer.ScatterBuffer:
    void addForm(float,float) -> addForm
    void feed(java.util.List) -> feed
com.github.mikephil.charting.charts.BarChart -> com.github.mikephil.charting.charts.BarChart:
    boolean mDrawHighlightArrow -> mDrawHighlightArrow
    boolean mDrawValueAboveBar -> mDrawValueAboveBar
    boolean mDrawValuesForWholeStack -> mDrawValuesForWholeStack
    boolean mDrawBarShadow -> mDrawBarShadow
    void init() -> init
    void calcMinMax() -> calcMinMax
    com.github.mikephil.charting.utils.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    com.github.mikephil.charting.utils.Highlight getHighlight(double,double) -> getHighlight
    com.github.mikephil.charting.utils.Highlight getStackedHighlight(int,int,double) -> getStackedHighlight
    android.graphics.RectF getBarBounds(com.github.mikephil.charting.data.BarEntry) -> getBarBounds
    void setDrawHighlightArrow(boolean) -> setDrawHighlightArrow
    boolean isDrawHighlightArrowEnabled() -> isDrawHighlightArrowEnabled
    void setDrawValueAboveBar(boolean) -> setDrawValueAboveBar
    boolean isDrawValueAboveBarEnabled() -> isDrawValueAboveBarEnabled
    void setDrawValuesForWholeStack(boolean) -> setDrawValuesForWholeStack
    boolean isDrawValuesForWholeStackEnabled() -> isDrawValuesForWholeStackEnabled
    void setDrawBarShadow(boolean) -> setDrawBarShadow
    boolean isDrawBarShadowEnabled() -> isDrawBarShadowEnabled
    com.github.mikephil.charting.data.BarData getBarData() -> getBarData
    int getLowestVisibleXIndex() -> getLowestVisibleXIndex
    int getHighestVisibleXIndex() -> getHighestVisibleXIndex
com.github.mikephil.charting.charts.BarLineChartBase -> com.github.mikephil.charting.charts.BarLineChartBase:
    int mMaxVisibleCount -> mMaxVisibleCount
    boolean mPinchZoomEnabled -> mPinchZoomEnabled
    boolean mDoubleTapToZoomEnabled -> mDoubleTapToZoomEnabled
    boolean mHighlightPerDragEnabled -> mHighlightPerDragEnabled
    boolean mHighLightIndicatorEnabled -> mHighLightIndicatorEnabled
    boolean mDragEnabled -> mDragEnabled
    boolean mScaleXEnabled -> mScaleXEnabled
    boolean mScaleYEnabled -> mScaleYEnabled
    boolean mFilterData -> mFilterData
    android.graphics.Paint mGridBackgroundPaint -> mGridBackgroundPaint
    android.graphics.Paint mBorderPaint -> mBorderPaint
    boolean mDrawGridBackground -> mDrawGridBackground
    boolean mDrawBorders -> mDrawBorders
    com.github.mikephil.charting.listener.OnDrawListener mDrawListener -> mDrawListener
    com.github.mikephil.charting.components.YAxis mAxisLeft -> mAxisLeft
    com.github.mikephil.charting.components.YAxis mAxisRight -> mAxisRight
    com.github.mikephil.charting.components.XAxis mXAxis -> mXAxis
    com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererLeft -> mAxisRendererLeft
    com.github.mikephil.charting.renderer.YAxisRenderer mAxisRendererRight -> mAxisRendererRight
    com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer -> mLeftAxisTransformer
    com.github.mikephil.charting.utils.Transformer mRightAxisTransformer -> mRightAxisTransformer
    com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer -> mXAxisRenderer
    long totalTime -> totalTime
    long drawCycles -> drawCycles
    android.view.View$OnTouchListener mListener -> mListener
    boolean mCustomViewPortEnabled -> mCustomViewPortEnabled
    void init() -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    void resetTracking() -> resetTracking
    void prepareValuePxMatrix() -> prepareValuePxMatrix
    void prepareOffsetMatrix() -> prepareOffsetMatrix
    void notifyDataSetChanged() -> notifyDataSetChanged
    void calcMinMax() -> calcMinMax
    void calculateOffsets() -> calculateOffsets
    void calcModulus() -> calcModulus
    float[] getMarkerPosition(com.github.mikephil.charting.data.Entry,int) -> getMarkerPosition
    void drawGridBackground(android.graphics.Canvas) -> drawGridBackground
    com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getTransformer
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void zoom(float,float,float,float) -> zoom
    void fitScreen() -> fitScreen
    void setScaleMinima(float,float) -> setScaleMinima
    void setVisibleXRange(float) -> setVisibleXRange
    void setVisibleYRange(float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> setVisibleYRange
    void moveViewToX(float) -> moveViewToX
    void moveViewToY(float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> moveViewToY
    void moveViewTo(float,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> moveViewTo
    void centerViewTo(int,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> centerViewTo
    void setViewPortOffsets(float,float,float,float) -> setViewPortOffsets
    void resetViewPortOffsets() -> resetViewPortOffsets
    float getDeltaY(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getDeltaY
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    void setOnDrawListener(com.github.mikephil.charting.listener.OnDrawListener) -> setOnDrawListener
    com.github.mikephil.charting.listener.OnDrawListener getDrawListener() -> getDrawListener
    android.graphics.PointF getPosition(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getPosition
    void setMaxVisibleValueCount(int) -> setMaxVisibleValueCount
    int getMaxVisibleCount() -> getMaxVisibleCount
    void setHighlightIndicatorEnabled(boolean) -> setHighlightIndicatorEnabled
    void setHighlightPerDragEnabled(boolean) -> setHighlightPerDragEnabled
    boolean isHighlightPerDragEnabled() -> isHighlightPerDragEnabled
    void setGridBackgroundColor(int) -> setGridBackgroundColor
    void setDragEnabled(boolean) -> setDragEnabled
    boolean isDragEnabled() -> isDragEnabled
    void setScaleEnabled(boolean) -> setScaleEnabled
    void setScaleXEnabled(boolean) -> setScaleXEnabled
    void setScaleYEnabled(boolean) -> setScaleYEnabled
    boolean isScaleXEnabled() -> isScaleXEnabled
    boolean isScaleYEnabled() -> isScaleYEnabled
    void setDoubleTapToZoomEnabled(boolean) -> setDoubleTapToZoomEnabled
    boolean isDoubleTapToZoomEnabled() -> isDoubleTapToZoomEnabled
    void setDrawGridBackground(boolean) -> setDrawGridBackground
    void setDrawBorders(boolean) -> setDrawBorders
    void setBorderWidth(float) -> setBorderWidth
    void setBorderColor(int) -> setBorderColor
    com.github.mikephil.charting.utils.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    java.util.List getYValsAtIndex(int) -> getYValsAtIndex
    com.github.mikephil.charting.utils.PointD getValuesByTouchPoint(float,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getValuesByTouchPoint
    com.github.mikephil.charting.utils.PointD getPixelsForValues(float,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getPixelsForValues
    float getYValueByTouchPoint(float,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getYValueByTouchPoint
    com.github.mikephil.charting.data.Entry getEntryByTouchPoint(float,float) -> getEntryByTouchPoint
    com.github.mikephil.charting.data.BarLineScatterCandleDataSet getDataSetByTouchPoint(float,float) -> getDataSetByTouchPoint
    int getLowestVisibleXIndex() -> getLowestVisibleXIndex
    int getHighestVisibleXIndex() -> getHighestVisibleXIndex
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    boolean isFullyZoomedOut() -> isFullyZoomedOut
    com.github.mikephil.charting.components.YAxis getAxisLeft() -> getAxisLeft
    com.github.mikephil.charting.components.YAxis getAxisRight() -> getAxisRight
    com.github.mikephil.charting.components.YAxis getAxis(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getAxis
    boolean isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency) -> isInverted
    com.github.mikephil.charting.components.XAxis getXAxis() -> getXAxis
    void enableFiltering(com.github.mikephil.charting.data.filter.Approximator) -> enableFiltering
    void disableFiltering() -> disableFiltering
    boolean isFilteringEnabled() -> isFilteringEnabled
    void setPinchZoom(boolean) -> setPinchZoom
    boolean isPinchZoomEnabled() -> isPinchZoomEnabled
    void setDragOffsetX(float) -> setDragOffsetX
    void setDragOffsetY(float) -> setDragOffsetY
    boolean hasNoDragOffset() -> hasNoDragOffset
    com.github.mikephil.charting.renderer.XAxisRenderer getRendererXAxis() -> getRendererXAxis
    com.github.mikephil.charting.renderer.YAxisRenderer getRendererLeftYAxis() -> getRendererLeftYAxis
    com.github.mikephil.charting.renderer.YAxisRenderer getRendererRightYAxis() -> getRendererRightYAxis
    float getYChartMax() -> getYChartMax
    float getYChartMin() -> getYChartMin
    boolean isAnyAxisInverted() -> isAnyAxisInverted
    void setPaint(android.graphics.Paint,int) -> setPaint
    android.graphics.Paint getPaint(int) -> getPaint
com.github.mikephil.charting.charts.BarLineChartBase$1 -> com.github.mikephil.charting.charts.BarLineChartBase$1:
    com.github.mikephil.charting.charts.BarLineChartBase this$0 -> this$0
    float val$left -> val$left
    float val$top -> val$top
    float val$right -> val$right
    float val$bottom -> val$bottom
    void run() -> run
com.github.mikephil.charting.charts.BarLineChartBase$DefaultFillFormatter -> com.github.mikephil.charting.charts.BarLineChartBase$DefaultFillFormatter:
    com.github.mikephil.charting.charts.BarLineChartBase this$0 -> this$0
    float getFillLinePosition(com.github.mikephil.charting.data.LineDataSet,com.github.mikephil.charting.data.LineData,float,float) -> getFillLinePosition
com.github.mikephil.charting.charts.BubbleChart -> com.github.mikephil.charting.charts.BubbleChart:
    void init() -> init
    void calcMinMax() -> calcMinMax
    com.github.mikephil.charting.data.BubbleData getBubbleData() -> getBubbleData
com.github.mikephil.charting.charts.CandleStickChart -> com.github.mikephil.charting.charts.CandleStickChart:
    void init() -> init
    void calcMinMax() -> calcMinMax
    com.github.mikephil.charting.data.CandleData getCandleData() -> getCandleData
com.github.mikephil.charting.charts.Chart -> com.github.mikephil.charting.charts.Chart:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean mLogEnabled -> mLogEnabled
    com.github.mikephil.charting.data.ChartData mData -> mData
    boolean mDragDecelerationEnabled -> mDragDecelerationEnabled
    float mDragDecelerationFrictionCoef -> mDragDecelerationFrictionCoef
    com.github.mikephil.charting.utils.ValueFormatter mDefaultFormatter -> mDefaultFormatter
    android.graphics.Paint mDescPaint -> mDescPaint
    android.graphics.Paint mInfoPaint -> mInfoPaint
    java.lang.String mDescription -> mDescription
    boolean mDataNotSet -> mDataNotSet
    boolean mDrawUnitInChart -> mDrawUnitInChart
    float mDeltaX -> mDeltaX
    float mXChartMin -> mXChartMin
    float mXChartMax -> mXChartMax
    boolean mTouchEnabled -> mTouchEnabled
    boolean mHighlightEnabled -> mHighlightEnabled
    com.github.mikephil.charting.components.Legend mLegend -> mLegend
    com.github.mikephil.charting.listener.OnChartValueSelectedListener mSelectionListener -> mSelectionListener
    java.lang.String mNoDataText -> mNoDataText
    com.github.mikephil.charting.listener.OnChartGestureListener mGestureListener -> mGestureListener
    java.lang.String mNoDataTextDescription -> mNoDataTextDescription
    com.github.mikephil.charting.renderer.LegendRenderer mLegendRenderer -> mLegendRenderer
    com.github.mikephil.charting.renderer.DataRenderer mRenderer -> mRenderer
    com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler -> mViewPortHandler
    com.github.mikephil.charting.animation.ChartAnimator mAnimator -> mAnimator
    boolean mOffsetsCalculated -> mOffsetsCalculated
    android.graphics.Bitmap mDrawBitmap -> mDrawBitmap
    android.graphics.Paint mDrawPaint -> mDrawPaint
    android.graphics.PointF mDescriptionPosition -> mDescriptionPosition
    com.github.mikephil.charting.utils.Highlight[] mIndicesToHightlight -> mIndicesToHightlight
    boolean mDrawMarkerViews -> mDrawMarkerViews
    com.github.mikephil.charting.components.MarkerView mMarkerView -> mMarkerView
    int PAINT_GRID_BACKGROUND -> PAINT_GRID_BACKGROUND
    int PAINT_INFO -> PAINT_INFO
    int PAINT_DESCRIPTION -> PAINT_DESCRIPTION
    int PAINT_HOLE -> PAINT_HOLE
    int PAINT_CENTER_TEXT -> PAINT_CENTER_TEXT
    int PAINT_LEGEND_LABEL -> PAINT_LEGEND_LABEL
    java.util.ArrayList mJobs -> mJobs
    void init() -> init
    void setData(com.github.mikephil.charting.data.ChartData) -> setData
    void clear() -> clear
    void clearValues() -> clearValues
    boolean isEmpty() -> isEmpty
    void notifyDataSetChanged() -> notifyDataSetChanged
    void calculateOffsets() -> calculateOffsets
    void calcMinMax() -> calcMinMax
    void calculateFormatter(float,float) -> calculateFormatter
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDescription(android.graphics.Canvas) -> drawDescription
    com.github.mikephil.charting.utils.Highlight[] getHighlighted() -> getHighlighted
    boolean valuesToHighlight() -> valuesToHighlight
    void highlightValues(com.github.mikephil.charting.utils.Highlight[]) -> highlightValues
    void highlightValue(int,int) -> highlightValue
    void highlightTouch(com.github.mikephil.charting.utils.Highlight) -> highlightTouch
    void drawMarkers(android.graphics.Canvas) -> drawMarkers
    float[] getMarkerPosition(com.github.mikephil.charting.data.Entry,int) -> getMarkerPosition
    com.github.mikephil.charting.animation.ChartAnimator getAnimator() -> getAnimator
    boolean isDragDecelerationEnabled() -> isDragDecelerationEnabled
    void setDragDecelerationEnabled(boolean) -> setDragDecelerationEnabled
    float getDragDecelerationFrictionCoef() -> getDragDecelerationFrictionCoef
    void setDragDecelerationFrictionCoef(float) -> setDragDecelerationFrictionCoef
    void animateXY(int,int,com.github.mikephil.charting.animation.EasingFunction,com.github.mikephil.charting.animation.EasingFunction) -> animateXY
    void animateX(int,com.github.mikephil.charting.animation.EasingFunction) -> animateX
    void animateY(int,com.github.mikephil.charting.animation.EasingFunction) -> animateY
    void animateXY(int,int,com.github.mikephil.charting.animation.Easing$EasingOption,com.github.mikephil.charting.animation.Easing$EasingOption) -> animateXY
    void animateX(int,com.github.mikephil.charting.animation.Easing$EasingOption) -> animateX
    void animateY(int,com.github.mikephil.charting.animation.Easing$EasingOption) -> animateY
    void animateX(int) -> animateX
    void animateY(int) -> animateY
    void animateXY(int,int) -> animateXY
    com.github.mikephil.charting.utils.ValueFormatter getDefaultValueFormatter() -> getDefaultValueFormatter
    void setOnChartValueSelectedListener(com.github.mikephil.charting.listener.OnChartValueSelectedListener) -> setOnChartValueSelectedListener
    void setOnChartGestureListener(com.github.mikephil.charting.listener.OnChartGestureListener) -> setOnChartGestureListener
    com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener() -> getOnChartGestureListener
    void setHighlightEnabled(boolean) -> setHighlightEnabled
    boolean isHighlightEnabled() -> isHighlightEnabled
    float getYValueSum() -> getYValueSum
    float getYMax() -> getYMax
    float getYMin() -> getYMin
    float getXChartMax() -> getXChartMax
    float getXChartMin() -> getXChartMin
    int getXValCount() -> getXValCount
    float getAverage() -> getAverage
    float getAverage(java.lang.String) -> getAverage
    int getValueCount() -> getValueCount
    android.graphics.PointF getCenter() -> getCenter
    android.graphics.PointF getCenterOffsets() -> getCenterOffsets
    void setDescription(java.lang.String) -> setDescription
    void setDescriptionPosition(float,float) -> setDescriptionPosition
    void setDescriptionTypeface(android.graphics.Typeface) -> setDescriptionTypeface
    void setDescriptionTextSize(float) -> setDescriptionTextSize
    void setDescriptionColor(int) -> setDescriptionColor
    void setLogEnabled(boolean) -> setLogEnabled
    boolean isLogEnabled() -> isLogEnabled
    void setNoDataText(java.lang.String) -> setNoDataText
    void setNoDataTextDescription(java.lang.String) -> setNoDataTextDescription
    void setTouchEnabled(boolean) -> setTouchEnabled
    void setMarkerView(com.github.mikephil.charting.components.MarkerView) -> setMarkerView
    com.github.mikephil.charting.components.MarkerView getMarkerView() -> getMarkerView
    com.github.mikephil.charting.components.Legend getLegend() -> getLegend
    com.github.mikephil.charting.renderer.LegendRenderer getLegendRenderer() -> getLegendRenderer
    android.graphics.RectF getContentRect() -> getContentRect
    void disableScroll() -> disableScroll
    void enableScroll() -> enableScroll
    void setPaint(android.graphics.Paint,int) -> setPaint
    android.graphics.Paint getPaint(int) -> getPaint
    boolean isDrawMarkerViewEnabled() -> isDrawMarkerViewEnabled
    void setDrawMarkerViews(boolean) -> setDrawMarkerViews
    java.lang.String getXValue(int) -> getXValue
    java.util.List getEntriesAtIndex(int) -> getEntriesAtIndex
    com.github.mikephil.charting.data.ChartData getData() -> getData
    float getPercentOfTotal(float) -> getPercentOfTotal
    com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler() -> getViewPortHandler
    com.github.mikephil.charting.renderer.DataRenderer getRenderer() -> getRenderer
    void setRenderer(com.github.mikephil.charting.renderer.DataRenderer) -> setRenderer
    android.graphics.PointF getCenterOfView() -> getCenterOfView
    android.graphics.Bitmap getChartBitmap() -> getChartBitmap
    boolean saveToPath(java.lang.String,java.lang.String) -> saveToPath
    boolean saveToGallery(java.lang.String,int) -> saveToGallery
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void addJob(java.lang.Runnable) -> addJob
    void removeJob(java.lang.Runnable) -> removeJob
    void clearAllJobs() -> clearAllJobs
    java.util.ArrayList getJobs() -> getJobs
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setHardwareAccelerationEnabled(boolean) -> setHardwareAccelerationEnabled
com.github.mikephil.charting.charts.Chart$1 -> com.github.mikephil.charting.charts.Chart$1:
    com.github.mikephil.charting.charts.Chart this$0 -> this$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.github.mikephil.charting.charts.CombinedChart -> com.github.mikephil.charting.charts.CombinedChart:
    com.github.mikephil.charting.utils.FillFormatter mFillFormatter -> mFillFormatter
    boolean mDrawHighlightArrow -> mDrawHighlightArrow
    boolean mDrawValueAboveBar -> mDrawValueAboveBar
    boolean mDrawValuesForWholeStack -> mDrawValuesForWholeStack
    boolean mDrawBarShadow -> mDrawBarShadow
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] mDrawOrder -> mDrawOrder
    void init() -> init
    void calcMinMax() -> calcMinMax
    void setData(com.github.mikephil.charting.data.CombinedData) -> setData
    void setFillFormatter(com.github.mikephil.charting.utils.FillFormatter) -> setFillFormatter
    com.github.mikephil.charting.utils.FillFormatter getFillFormatter() -> getFillFormatter
    com.github.mikephil.charting.data.LineData getLineData() -> getLineData
    com.github.mikephil.charting.data.BarData getBarData() -> getBarData
    com.github.mikephil.charting.data.ScatterData getScatterData() -> getScatterData
    com.github.mikephil.charting.data.CandleData getCandleData() -> getCandleData
    com.github.mikephil.charting.data.BubbleData getBubbleData() -> getBubbleData
    boolean isDrawBarShadowEnabled() -> isDrawBarShadowEnabled
    boolean isDrawValueAboveBarEnabled() -> isDrawValueAboveBarEnabled
    boolean isDrawHighlightArrowEnabled() -> isDrawHighlightArrowEnabled
    boolean isDrawValuesForWholeStackEnabled() -> isDrawValuesForWholeStackEnabled
    void setDrawHighlightArrow(boolean) -> setDrawHighlightArrow
    void setDrawValueAboveBar(boolean) -> setDrawValueAboveBar
    void setDrawValuesForWholeStack(boolean) -> setDrawValuesForWholeStack
    void setDrawBarShadow(boolean) -> setDrawBarShadow
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] getDrawOrder() -> getDrawOrder
    void setDrawOrder(com.github.mikephil.charting.charts.CombinedChart$DrawOrder[]) -> setDrawOrder
    void setData(com.github.mikephil.charting.data.ChartData) -> setData
com.github.mikephil.charting.charts.CombinedChart$DrawOrder -> com.github.mikephil.charting.charts.CombinedChart$DrawOrder:
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder BAR -> BAR
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder BUBBLE -> BUBBLE
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder LINE -> LINE
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder CANDLE -> CANDLE
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder SCATTER -> SCATTER
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] values() -> values
    com.github.mikephil.charting.charts.CombinedChart$DrawOrder valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.charts.HorizontalBarChart -> com.github.mikephil.charting.charts.HorizontalBarChart:
    void init() -> init
    void calculateOffsets() -> calculateOffsets
    void prepareValuePxMatrix() -> prepareValuePxMatrix
    void calcModulus() -> calcModulus
    android.graphics.RectF getBarBounds(com.github.mikephil.charting.data.BarEntry) -> getBarBounds
    android.graphics.PointF getPosition(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getPosition
    com.github.mikephil.charting.utils.Highlight getHighlightByTouchPoint(float,float) -> getHighlightByTouchPoint
    int getLowestVisibleXIndex() -> getLowestVisibleXIndex
    int getHighestVisibleXIndex() -> getHighestVisibleXIndex
com.github.mikephil.charting.charts.LineChart -> com.github.mikephil.charting.charts.LineChart:
    float mHighlightWidth -> mHighlightWidth
    com.github.mikephil.charting.utils.FillFormatter mFillFormatter -> mFillFormatter
    void init() -> init
    void calcMinMax() -> calcMinMax
    void setHighlightLineWidth(float) -> setHighlightLineWidth
    float getHighlightLineWidth() -> getHighlightLineWidth
    void setFillFormatter(com.github.mikephil.charting.utils.FillFormatter) -> setFillFormatter
    com.github.mikephil.charting.utils.FillFormatter getFillFormatter() -> getFillFormatter
    com.github.mikephil.charting.data.LineData getLineData() -> getLineData
com.github.mikephil.charting.charts.PieChart -> com.github.mikephil.charting.charts.PieChart:
    android.graphics.RectF mCircleBox -> mCircleBox
    boolean mDrawXLabels -> mDrawXLabels
    float[] mDrawAngles -> mDrawAngles
    float[] mAbsoluteAngles -> mAbsoluteAngles
    boolean mDrawHole -> mDrawHole
    boolean mUsePercentValues -> mUsePercentValues
    java.lang.String mCenterText -> mCenterText
    float mHoleRadiusPercent -> mHoleRadiusPercent
    float mTransparentCircleRadiusPercent -> mTransparentCircleRadiusPercent
    boolean mDrawCenterText -> mDrawCenterText
    void init() -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    void calculateOffsets() -> calculateOffsets
    void calcMinMax() -> calcMinMax
    float[] getMarkerPosition(com.github.mikephil.charting.data.Entry,int) -> getMarkerPosition
    void calcAngles() -> calcAngles
    boolean needsHighlight(int,int) -> needsHighlight
    float calcAngle(float) -> calcAngle
    int getIndexForAngle(float) -> getIndexForAngle
    int getDataSetIndexForIndex(int) -> getDataSetIndexForIndex
    float[] getDrawAngles() -> getDrawAngles
    float[] getAbsoluteAngles() -> getAbsoluteAngles
    void setHoleColor(int) -> setHoleColor
    void setHoleColorTransparent(boolean) -> setHoleColorTransparent
    boolean isHoleTransparent() -> isHoleTransparent
    void setDrawHoleEnabled(boolean) -> setDrawHoleEnabled
    boolean isDrawHoleEnabled() -> isDrawHoleEnabled
    void setCenterText(java.lang.String) -> setCenterText
    java.lang.String getCenterText() -> getCenterText
    void setDrawCenterText(boolean) -> setDrawCenterText
    boolean isDrawCenterTextEnabled() -> isDrawCenterTextEnabled
    float getRequiredBottomOffset() -> getRequiredBottomOffset
    float getRequiredBaseOffset() -> getRequiredBaseOffset
    float getRadius() -> getRadius
    android.graphics.RectF getCircleBox() -> getCircleBox
    android.graphics.PointF getCenterCircleBox() -> getCenterCircleBox
    void setCenterTextTypeface(android.graphics.Typeface) -> setCenterTextTypeface
    void setCenterTextSize(float) -> setCenterTextSize
    void setCenterTextSizePixels(float) -> setCenterTextSizePixels
    void setCenterTextColor(int) -> setCenterTextColor
    void setHoleRadius(float) -> setHoleRadius
    float getHoleRadius() -> getHoleRadius
    void setTransparentCircleColor(int) -> setTransparentCircleColor
    void setTransparentCircleRadius(float) -> setTransparentCircleRadius
    float getTransparentCircleRadius() -> getTransparentCircleRadius
    void setDrawSliceText(boolean) -> setDrawSliceText
    boolean isDrawSliceTextEnabled() -> isDrawSliceTextEnabled
    void setUsePercentValues(boolean) -> setUsePercentValues
    boolean isUsePercentValuesEnabled() -> isUsePercentValuesEnabled
com.github.mikephil.charting.charts.PieRadarChartBase -> com.github.mikephil.charting.charts.PieRadarChartBase:
    float mRotationAngle -> mRotationAngle
    float mRawRotationAngle -> mRawRotationAngle
    boolean mRotateEnabled -> mRotateEnabled
    android.view.View$OnTouchListener mListener -> mListener
    void init() -> init
    void calcMinMax() -> calcMinMax
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void calculateOffsets() -> calculateOffsets
    float getAngleForPoint(float,float) -> getAngleForPoint
    android.graphics.PointF getPosition(android.graphics.PointF,float,float) -> getPosition
    float distanceToCenter(float,float) -> distanceToCenter
    int getIndexForAngle(float) -> getIndexForAngle
    void setRotationAngle(float) -> setRotationAngle
    float getRawRotationAngle() -> getRawRotationAngle
    float getRotationAngle() -> getRotationAngle
    void setRotationEnabled(boolean) -> setRotationEnabled
    boolean isRotationEnabled() -> isRotationEnabled
    float getDiameter() -> getDiameter
    float getRadius() -> getRadius
    float getRequiredBottomOffset() -> getRequiredBottomOffset
    float getRequiredBaseOffset() -> getRequiredBaseOffset
    float getFullLegendWidth() -> getFullLegendWidth
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    float getYChartMax() -> getYChartMax
    float getYChartMin() -> getYChartMin
    java.util.List getYValsAtIndex(int) -> getYValsAtIndex
    void spin(int,float,float,com.github.mikephil.charting.animation.Easing$EasingOption) -> spin
com.github.mikephil.charting.charts.PieRadarChartBase$1 -> com.github.mikephil.charting.charts.PieRadarChartBase$1:
    com.github.mikephil.charting.charts.PieRadarChartBase this$0 -> this$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.github.mikephil.charting.charts.RadarChart -> com.github.mikephil.charting.charts.RadarChart:
    float mWebLineWidth -> mWebLineWidth
    float mInnerWebLineWidth -> mInnerWebLineWidth
    int mWebColor -> mWebColor
    int mWebColorInner -> mWebColorInner
    int mWebAlpha -> mWebAlpha
    boolean mDrawWeb -> mDrawWeb
    com.github.mikephil.charting.components.YAxis mYAxis -> mYAxis
    com.github.mikephil.charting.components.XAxis mXAxis -> mXAxis
    com.github.mikephil.charting.renderer.YAxisRendererRadarChart mYAxisRenderer -> mYAxisRenderer
    com.github.mikephil.charting.renderer.XAxisRendererRadarChart mXAxisRenderer -> mXAxisRenderer
    void init() -> init
    void calcMinMax() -> calcMinMax
    float[] getMarkerPosition(com.github.mikephil.charting.data.Entry,int) -> getMarkerPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    float getFactor() -> getFactor
    float getSliceAngle() -> getSliceAngle
    int getIndexForAngle(float) -> getIndexForAngle
    com.github.mikephil.charting.components.YAxis getYAxis() -> getYAxis
    com.github.mikephil.charting.components.XAxis getXAxis() -> getXAxis
    void setWebLineWidth(float) -> setWebLineWidth
    float getWebLineWidth() -> getWebLineWidth
    void setWebLineWidthInner(float) -> setWebLineWidthInner
    float getWebLineWidthInner() -> getWebLineWidthInner
    void setWebAlpha(int) -> setWebAlpha
    int getWebAlpha() -> getWebAlpha
    void setWebColor(int) -> setWebColor
    int getWebColor() -> getWebColor
    void setWebColorInner(int) -> setWebColorInner
    int getWebColorInner() -> getWebColorInner
    void setDrawWeb(boolean) -> setDrawWeb
    float getRequiredBottomOffset() -> getRequiredBottomOffset
    float getRequiredBaseOffset() -> getRequiredBaseOffset
    float getRadius() -> getRadius
    float getYChartMax() -> getYChartMax
    float getYChartMin() -> getYChartMin
    float getYRange() -> getYRange
com.github.mikephil.charting.charts.ScatterChart -> com.github.mikephil.charting.charts.ScatterChart:
    void init() -> init
    void calcMinMax() -> calcMinMax
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] getAllPossibleShapes() -> getAllPossibleShapes
    com.github.mikephil.charting.data.ScatterData getScatterData() -> getScatterData
com.github.mikephil.charting.charts.ScatterChart$ScatterShape -> com.github.mikephil.charting.charts.ScatterChart$ScatterShape:
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape CROSS -> CROSS
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape TRIANGLE -> TRIANGLE
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape CIRCLE -> CIRCLE
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape SQUARE -> SQUARE
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] values() -> values
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.components.AxisBase -> com.github.mikephil.charting.components.AxisBase:
    int mGridColor -> mGridColor
    float mGridLineWidth -> mGridLineWidth
    int mAxisLineColor -> mAxisLineColor
    float mAxisLineWidth -> mAxisLineWidth
    boolean mDrawGridLines -> mDrawGridLines
    boolean mDrawAxisLine -> mDrawAxisLine
    boolean mDrawLabels -> mDrawLabels
    android.graphics.DashPathEffect mGridDashPathEffect -> mGridDashPathEffect
    java.util.List mLimitLines -> mLimitLines
    boolean mDrawLimitLineBehindData -> mDrawLimitLineBehindData
    void setDrawGridLines(boolean) -> setDrawGridLines
    boolean isDrawGridLinesEnabled() -> isDrawGridLinesEnabled
    void setDrawAxisLine(boolean) -> setDrawAxisLine
    boolean isDrawAxisLineEnabled() -> isDrawAxisLineEnabled
    void setGridColor(int) -> setGridColor
    int getGridColor() -> getGridColor
    void setAxisLineWidth(float) -> setAxisLineWidth
    float getAxisLineWidth() -> getAxisLineWidth
    void setGridLineWidth(float) -> setGridLineWidth
    float getGridLineWidth() -> getGridLineWidth
    void setAxisLineColor(int) -> setAxisLineColor
    int getAxisLineColor() -> getAxisLineColor
    void setDrawLabels(boolean) -> setDrawLabels
    boolean isDrawLabelsEnabled() -> isDrawLabelsEnabled
    void addLimitLine(com.github.mikephil.charting.components.LimitLine) -> addLimitLine
    void removeLimitLine(com.github.mikephil.charting.components.LimitLine) -> removeLimitLine
    void removeAllLimitLines() -> removeAllLimitLines
    java.util.List getLimitLines() -> getLimitLines
    void setDrawLimitLinesBehindData(boolean) -> setDrawLimitLinesBehindData
    boolean isDrawLimitLinesBehindDataEnabled() -> isDrawLimitLinesBehindDataEnabled
    java.lang.String getLongestLabel() -> getLongestLabel
    void enableGridDashedLine(float,float,float) -> enableGridDashedLine
    void disableGridDashedLine() -> disableGridDashedLine
    boolean isGridDashedLineEnabled() -> isGridDashedLineEnabled
    android.graphics.DashPathEffect getGridDashPathEffect() -> getGridDashPathEffect
com.github.mikephil.charting.components.ComponentBase -> com.github.mikephil.charting.components.ComponentBase:
    boolean mEnabled -> mEnabled
    float mXOffset -> mXOffset
    float mYOffset -> mYOffset
    android.graphics.Typeface mTypeface -> mTypeface
    float mTextSize -> mTextSize
    int mTextColor -> mTextColor
    float getXOffset() -> getXOffset
    void setXOffset(float) -> setXOffset
    float getYOffset() -> getYOffset
    void setYOffset(float) -> setYOffset
    android.graphics.Typeface getTypeface() -> getTypeface
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setTextSize(float) -> setTextSize
    float getTextSize() -> getTextSize
    void setTextColor(int) -> setTextColor
    int getTextColor() -> getTextColor
    void setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
com.github.mikephil.charting.components.Legend -> com.github.mikephil.charting.components.Legend:
    int[] mColors -> mColors
    java.lang.String[] mLabels -> mLabels
    com.github.mikephil.charting.components.Legend$LegendPosition mPosition -> mPosition
    com.github.mikephil.charting.components.Legend$LegendDirection mDirection -> mDirection
    com.github.mikephil.charting.components.Legend$LegendForm mShape -> mShape
    float mFormSize -> mFormSize
    float mXEntrySpace -> mXEntrySpace
    float mYEntrySpace -> mYEntrySpace
    float mFormToTextSpace -> mFormToTextSpace
    float mStackSpace -> mStackSpace
    float mNeededWidth -> mNeededWidth
    float mNeededHeight -> mNeededHeight
    float mTextHeightMax -> mTextHeightMax
    float mTextWidthMax -> mTextWidthMax
    void setColors(java.util.List) -> setColors
    void setLabels(java.util.List) -> setLabels
    float getMaximumEntryWidth(android.graphics.Paint) -> getMaximumEntryWidth
    float getMaximumEntryHeight(android.graphics.Paint) -> getMaximumEntryHeight
    int[] getColors() -> getColors
    java.lang.String[] getLegendLabels() -> getLegendLabels
    void setLabels(java.lang.String[]) -> setLabels
    java.lang.String getLabel(int) -> getLabel
    com.github.mikephil.charting.components.Legend$LegendPosition getPosition() -> getPosition
    void setPosition(com.github.mikephil.charting.components.Legend$LegendPosition) -> setPosition
    com.github.mikephil.charting.components.Legend$LegendDirection getDirection() -> getDirection
    void setDirection(com.github.mikephil.charting.components.Legend$LegendDirection) -> setDirection
    com.github.mikephil.charting.components.Legend$LegendForm getForm() -> getForm
    void setForm(com.github.mikephil.charting.components.Legend$LegendForm) -> setForm
    void setFormSize(float) -> setFormSize
    float getFormSize() -> getFormSize
    float getXEntrySpace() -> getXEntrySpace
    void setXEntrySpace(float) -> setXEntrySpace
    float getYEntrySpace() -> getYEntrySpace
    void setYEntrySpace(float) -> setYEntrySpace
    float getFormToTextSpace() -> getFormToTextSpace
    void setFormToTextSpace(float) -> setFormToTextSpace
    float getStackSpace() -> getStackSpace
    void setStackSpace(float) -> setStackSpace
    float getFullWidth(android.graphics.Paint) -> getFullWidth
    float getFullHeight(android.graphics.Paint) -> getFullHeight
    void calculateDimensions(android.graphics.Paint) -> calculateDimensions
com.github.mikephil.charting.components.Legend$LegendDirection -> com.github.mikephil.charting.components.Legend$LegendDirection:
    com.github.mikephil.charting.components.Legend$LegendDirection LEFT_TO_RIGHT -> LEFT_TO_RIGHT
    com.github.mikephil.charting.components.Legend$LegendDirection RIGHT_TO_LEFT -> RIGHT_TO_LEFT
    com.github.mikephil.charting.components.Legend$LegendDirection[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.components.Legend$LegendDirection[] values() -> values
    com.github.mikephil.charting.components.Legend$LegendDirection valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.components.Legend$LegendForm -> com.github.mikephil.charting.components.Legend$LegendForm:
    com.github.mikephil.charting.components.Legend$LegendForm SQUARE -> SQUARE
    com.github.mikephil.charting.components.Legend$LegendForm CIRCLE -> CIRCLE
    com.github.mikephil.charting.components.Legend$LegendForm LINE -> LINE
    com.github.mikephil.charting.components.Legend$LegendForm[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.components.Legend$LegendForm[] values() -> values
    com.github.mikephil.charting.components.Legend$LegendForm valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.components.Legend$LegendPosition -> com.github.mikephil.charting.components.Legend$LegendPosition:
    com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART -> RIGHT_OF_CHART
    com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART_CENTER -> RIGHT_OF_CHART_CENTER
    com.github.mikephil.charting.components.Legend$LegendPosition RIGHT_OF_CHART_INSIDE -> RIGHT_OF_CHART_INSIDE
    com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART -> LEFT_OF_CHART
    com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART_CENTER -> LEFT_OF_CHART_CENTER
    com.github.mikephil.charting.components.Legend$LegendPosition LEFT_OF_CHART_INSIDE -> LEFT_OF_CHART_INSIDE
    com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_LEFT -> BELOW_CHART_LEFT
    com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_RIGHT -> BELOW_CHART_RIGHT
    com.github.mikephil.charting.components.Legend$LegendPosition BELOW_CHART_CENTER -> BELOW_CHART_CENTER
    com.github.mikephil.charting.components.Legend$LegendPosition PIECHART_CENTER -> PIECHART_CENTER
    com.github.mikephil.charting.components.Legend$LegendPosition[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.components.Legend$LegendPosition[] values() -> values
    com.github.mikephil.charting.components.Legend$LegendPosition valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.components.LimitLine -> com.github.mikephil.charting.components.LimitLine:
    float mLimit -> mLimit
    float mLineWidth -> mLineWidth
    int mLineColor -> mLineColor
    int mValueTextColor -> mValueTextColor
    float mTextSize -> mTextSize
    android.graphics.Paint$Style mTextStyle -> mTextStyle
    java.lang.String mLabel -> mLabel
    android.graphics.DashPathEffect mDashPathEffect -> mDashPathEffect
    com.github.mikephil.charting.components.LimitLine$LimitLabelPosition mLabelPosition -> mLabelPosition
    float getLimit() -> getLimit
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setLineColor(int) -> setLineColor
    int getLineColor() -> getLineColor
    void enableDashedLine(float,float,float) -> enableDashedLine
    void disableDashedLine() -> disableDashedLine
    boolean isDashedLineEnabled() -> isDashedLineEnabled
    android.graphics.DashPathEffect getDashPathEffect() -> getDashPathEffect
    void setTextColor(int) -> setTextColor
    int getTextColor() -> getTextColor
    void setTextStyle(android.graphics.Paint$Style) -> setTextStyle
    android.graphics.Paint$Style getTextStyle() -> getTextStyle
    void setLabelPosition(com.github.mikephil.charting.components.LimitLine$LimitLabelPosition) -> setLabelPosition
    com.github.mikephil.charting.components.LimitLine$LimitLabelPosition getLabelPosition() -> getLabelPosition
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setTextSize(float) -> setTextSize
    float getTextSize() -> getTextSize
com.github.mikephil.charting.components.LimitLine$LimitLabelPosition -> com.github.mikephil.charting.components.LimitLine$LimitLabelPosition:
    com.github.mikephil.charting.components.LimitLine$LimitLabelPosition POS_LEFT -> POS_LEFT
    com.github.mikephil.charting.components.LimitLine$LimitLabelPosition POS_RIGHT -> POS_RIGHT
    com.github.mikephil.charting.components.LimitLine$LimitLabelPosition[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.components.LimitLine$LimitLabelPosition[] values() -> values
    com.github.mikephil.charting.components.LimitLine$LimitLabelPosition valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.components.MarkerView -> com.github.mikephil.charting.components.MarkerView:
    void setupLayoutResource(int) -> setupLayoutResource
    void draw(android.graphics.Canvas,float,float) -> draw
    void refreshContent(com.github.mikephil.charting.data.Entry,int) -> refreshContent
    int getXOffset() -> getXOffset
    int getYOffset() -> getYOffset
com.github.mikephil.charting.components.XAxis -> com.github.mikephil.charting.components.XAxis:
    java.util.List mValues -> mValues
    int mLabelWidth -> mLabelWidth
    int mLabelHeight -> mLabelHeight
    int mSpaceBetweenLabels -> mSpaceBetweenLabels
    int mAxisLabelModulus -> mAxisLabelModulus
    boolean mIsAxisModulusCustom -> mIsAxisModulusCustom
    int mYAxisLabelModulus -> mYAxisLabelModulus
    boolean mAvoidFirstLastClipping -> mAvoidFirstLastClipping
    com.github.mikephil.charting.components.XAxis$XAxisPosition mPosition -> mPosition
    com.github.mikephil.charting.components.XAxis$XAxisPosition getPosition() -> getPosition
    void setPosition(com.github.mikephil.charting.components.XAxis$XAxisPosition) -> setPosition
    void setSpaceBetweenLabels(int) -> setSpaceBetweenLabels
    void setLabelsToSkip(int) -> setLabelsToSkip
    void resetLabelsToSkip() -> resetLabelsToSkip
    boolean isAxisModulusCustom() -> isAxisModulusCustom
    int getSpaceBetweenLabels() -> getSpaceBetweenLabels
    void setAvoidFirstLastClipping(boolean) -> setAvoidFirstLastClipping
    boolean isAvoidFirstLastClippingEnabled() -> isAvoidFirstLastClippingEnabled
    void setValues(java.util.List) -> setValues
    java.util.List getValues() -> getValues
    java.lang.String getLongestLabel() -> getLongestLabel
com.github.mikephil.charting.components.XAxis$XAxisPosition -> com.github.mikephil.charting.components.XAxis$XAxisPosition:
    com.github.mikephil.charting.components.XAxis$XAxisPosition TOP -> TOP
    com.github.mikephil.charting.components.XAxis$XAxisPosition BOTTOM -> BOTTOM
    com.github.mikephil.charting.components.XAxis$XAxisPosition BOTH_SIDED -> BOTH_SIDED
    com.github.mikephil.charting.components.XAxis$XAxisPosition TOP_INSIDE -> TOP_INSIDE
    com.github.mikephil.charting.components.XAxis$XAxisPosition BOTTOM_INSIDE -> BOTTOM_INSIDE
    com.github.mikephil.charting.components.XAxis$XAxisPosition[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.components.XAxis$XAxisPosition[] values() -> values
    com.github.mikephil.charting.components.XAxis$XAxisPosition valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.components.YAxis -> com.github.mikephil.charting.components.YAxis:
    com.github.mikephil.charting.utils.ValueFormatter mValueFormatter -> mValueFormatter
    float[] mEntries -> mEntries
    int mEntryCount -> mEntryCount
    int mDecimals -> mDecimals
    int mLabelCount -> mLabelCount
    boolean mDrawTopYLabelEntry -> mDrawTopYLabelEntry
    boolean mShowOnlyMinMax -> mShowOnlyMinMax
    boolean mInverted -> mInverted
    boolean mStartAtZero -> mStartAtZero
    float mCustomAxisMin -> mCustomAxisMin
    float mCustomAxisMax -> mCustomAxisMax
    float mSpacePercentTop -> mSpacePercentTop
    float mSpacePercentBottom -> mSpacePercentBottom
    float mAxisMaximum -> mAxisMaximum
    float mAxisMinimum -> mAxisMinimum
    float mAxisRange -> mAxisRange
    com.github.mikephil.charting.components.YAxis$YAxisLabelPosition mPosition -> mPosition
    com.github.mikephil.charting.components.YAxis$AxisDependency mAxisDependency -> mAxisDependency
    com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency() -> getAxisDependency
    com.github.mikephil.charting.components.YAxis$YAxisLabelPosition getLabelPosition() -> getLabelPosition
    void setPosition(com.github.mikephil.charting.components.YAxis$YAxisLabelPosition) -> setPosition
    boolean isDrawTopYLabelEntryEnabled() -> isDrawTopYLabelEntryEnabled
    void setDrawTopYLabelEntry(boolean) -> setDrawTopYLabelEntry
    void setLabelCount(int) -> setLabelCount
    int getLabelCount() -> getLabelCount
    void setShowOnlyMinMax(boolean) -> setShowOnlyMinMax
    boolean isShowOnlyMinMaxEnabled() -> isShowOnlyMinMaxEnabled
    void setInverted(boolean) -> setInverted
    boolean isInverted() -> isInverted
    void setStartAtZero(boolean) -> setStartAtZero
    boolean isStartAtZeroEnabled() -> isStartAtZeroEnabled
    float getAxisMinValue() -> getAxisMinValue
    void setAxisMinValue(float) -> setAxisMinValue
    void resetAxisMinValue() -> resetAxisMinValue
    float getAxisMaxValue() -> getAxisMaxValue
    void setAxisMaxValue(float) -> setAxisMaxValue
    void resetAxisMaxValue() -> resetAxisMaxValue
    void setSpaceTop(float) -> setSpaceTop
    float getSpaceTop() -> getSpaceTop
    void setSpaceBottom(float) -> setSpaceBottom
    float getSpaceBottom() -> getSpaceBottom
    float getRequiredWidthSpace(android.graphics.Paint) -> getRequiredWidthSpace
    float getRequiredHeightSpace(android.graphics.Paint) -> getRequiredHeightSpace
    java.lang.String getLongestLabel() -> getLongestLabel
    java.lang.String getFormattedLabel(int) -> getFormattedLabel
    void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter) -> setValueFormatter
    com.github.mikephil.charting.utils.ValueFormatter getValueFormatter() -> getValueFormatter
    boolean needsDefaultFormatter() -> needsDefaultFormatter
    boolean needsOffset() -> needsOffset
com.github.mikephil.charting.components.YAxis$AxisDependency -> com.github.mikephil.charting.components.YAxis$AxisDependency:
    com.github.mikephil.charting.components.YAxis$AxisDependency LEFT -> LEFT
    com.github.mikephil.charting.components.YAxis$AxisDependency RIGHT -> RIGHT
    com.github.mikephil.charting.components.YAxis$AxisDependency[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.components.YAxis$AxisDependency[] values() -> values
    com.github.mikephil.charting.components.YAxis$AxisDependency valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.components.YAxis$YAxisLabelPosition -> com.github.mikephil.charting.components.YAxis$YAxisLabelPosition:
    com.github.mikephil.charting.components.YAxis$YAxisLabelPosition OUTSIDE_CHART -> OUTSIDE_CHART
    com.github.mikephil.charting.components.YAxis$YAxisLabelPosition INSIDE_CHART -> INSIDE_CHART
    com.github.mikephil.charting.components.YAxis$YAxisLabelPosition[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.components.YAxis$YAxisLabelPosition[] values() -> values
    com.github.mikephil.charting.components.YAxis$YAxisLabelPosition valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.data.BarData -> com.github.mikephil.charting.data.BarData:
    float mGroupSpace -> mGroupSpace
    java.util.List toList(com.github.mikephil.charting.data.BarDataSet) -> toList
    float getGroupSpace() -> getGroupSpace
    void setGroupSpace(float) -> setGroupSpace
    boolean isGrouped() -> isGrouped
com.github.mikephil.charting.data.BarDataSet -> com.github.mikephil.charting.data.BarDataSet:
    float mBarSpace -> mBarSpace
    int mStackSize -> mStackSize
    int mBarShadowColor -> mBarShadowColor
    int mHighLightAlpha -> mHighLightAlpha
    int mEntryCountStacks -> mEntryCountStacks
    java.lang.String[] mStackLabels -> mStackLabels
    com.github.mikephil.charting.data.DataSet copy() -> copy
    void calcEntryCountIncludingStacks(java.util.List) -> calcEntryCountIncludingStacks
    void calcStackSize(java.util.List) -> calcStackSize
    int getStackSize() -> getStackSize
    boolean isStacked() -> isStacked
    int getEntryCountStacks() -> getEntryCountStacks
    float getBarSpacePercent() -> getBarSpacePercent
    float getBarSpace() -> getBarSpace
    void setBarSpacePercent(float) -> setBarSpacePercent
    void setBarShadowColor(int) -> setBarShadowColor
    int getBarShadowColor() -> getBarShadowColor
    void setHighLightAlpha(int) -> setHighLightAlpha
    int getHighLightAlpha() -> getHighLightAlpha
    void setStackLabels(java.lang.String[]) -> setStackLabels
    java.lang.String[] getStackLabels() -> getStackLabels
com.github.mikephil.charting.data.BarEntry -> com.github.mikephil.charting.data.BarEntry:
    float[] mVals -> mVals
    com.github.mikephil.charting.data.BarEntry copy() -> copy
    float[] getVals() -> getVals
    void setVals(float[]) -> setVals
    int getClosestIndexAbove(float) -> getClosestIndexAbove
    float getBelowSum(int) -> getBelowSum
    float calcSum(float[]) -> calcSum
    com.github.mikephil.charting.data.Entry copy() -> copy
com.github.mikephil.charting.data.BarLineScatterCandleData -> com.github.mikephil.charting.data.BarLineScatterCandleData:
com.github.mikephil.charting.data.BarLineScatterCandleDataSet -> com.github.mikephil.charting.data.BarLineScatterCandleDataSet:
    int mHighLightColor -> mHighLightColor
    void setHighLightColor(int) -> setHighLightColor
    int getHighLightColor() -> getHighLightColor
com.github.mikephil.charting.data.BubbleData -> com.github.mikephil.charting.data.BubbleData:
    java.util.List toList(com.github.mikephil.charting.data.BubbleDataSet) -> toList
    void setHighlightCircleWidth(float) -> setHighlightCircleWidth
com.github.mikephil.charting.data.BubbleDataSet -> com.github.mikephil.charting.data.BubbleDataSet:
    float mXMax -> mXMax
    float mXMin -> mXMin
    float mMaxSize -> mMaxSize
    float mHighlightCircleWidth -> mHighlightCircleWidth
    void setHighlightCircleWidth(float) -> setHighlightCircleWidth
    float getHighlightCircleWidth() -> getHighlightCircleWidth
    void setColor(int,int) -> setColor
    void calcMinMax() -> calcMinMax
    com.github.mikephil.charting.data.DataSet copy() -> copy
    float getXMax() -> getXMax
    float getXMin() -> getXMin
    float getMaxSize() -> getMaxSize
    float yMin(com.github.mikephil.charting.data.BubbleEntry) -> yMin
    float yMax(com.github.mikephil.charting.data.BubbleEntry) -> yMax
    float xMin(com.github.mikephil.charting.data.BubbleEntry) -> xMin
    float xMax(com.github.mikephil.charting.data.BubbleEntry) -> xMax
    float largestSize(com.github.mikephil.charting.data.BubbleEntry) -> largestSize
com.github.mikephil.charting.data.BubbleEntry -> com.github.mikephil.charting.data.BubbleEntry:
    float mSize -> mSize
    com.github.mikephil.charting.data.BubbleEntry copy() -> copy
    float getSize() -> getSize
    void setSize(float) -> setSize
    com.github.mikephil.charting.data.Entry copy() -> copy
com.github.mikephil.charting.data.CandleData -> com.github.mikephil.charting.data.CandleData:
    java.util.List toList(com.github.mikephil.charting.data.CandleDataSet) -> toList
com.github.mikephil.charting.data.CandleDataSet -> com.github.mikephil.charting.data.CandleDataSet:
    float mShadowWidth -> mShadowWidth
    float mBodySpace -> mBodySpace
    android.graphics.Paint$Style mIncreasingPaintStyle -> mIncreasingPaintStyle
    android.graphics.Paint$Style mDecreasingPaintStyle -> mDecreasingPaintStyle
    int mIncreasingColor -> mIncreasingColor
    int mDecreasingColor -> mDecreasingColor
    int mShadowColor -> mShadowColor
    com.github.mikephil.charting.data.DataSet copy() -> copy
    void calcMinMax() -> calcMinMax
    void setBodySpace(float) -> setBodySpace
    float getBodySpace() -> getBodySpace
    void setShadowWidth(float) -> setShadowWidth
    float getShadowWidth() -> getShadowWidth
    void setDecreasingColor(int) -> setDecreasingColor
    int getDecreasingColor() -> getDecreasingColor
    void setIncreasingColor(int) -> setIncreasingColor
    int getIncreasingColor() -> getIncreasingColor
    android.graphics.Paint$Style getDecreasingPaintStyle() -> getDecreasingPaintStyle
    void setDecreasingPaintStyle(android.graphics.Paint$Style) -> setDecreasingPaintStyle
    android.graphics.Paint$Style getIncreasingPaintStyle() -> getIncreasingPaintStyle
    void setIncreasingPaintStyle(android.graphics.Paint$Style) -> setIncreasingPaintStyle
    int getShadowColor() -> getShadowColor
    void setShadowColor(int) -> setShadowColor
com.github.mikephil.charting.data.CandleEntry -> com.github.mikephil.charting.data.CandleEntry:
    float mShadowHigh -> mShadowHigh
    float mShadowLow -> mShadowLow
    float mClose -> mClose
    float mOpen -> mOpen
    float getShadowRange() -> getShadowRange
    float getBodyRange() -> getBodyRange
    float getVal() -> getVal
    com.github.mikephil.charting.data.CandleEntry copy() -> copy
    float getHigh() -> getHigh
    void setHigh(float) -> setHigh
    float getLow() -> getLow
    void setLow(float) -> setLow
    float getClose() -> getClose
    void setClose(float) -> setClose
    float getOpen() -> getOpen
    void setOpen(float) -> setOpen
    com.github.mikephil.charting.data.Entry copy() -> copy
com.github.mikephil.charting.data.ChartData -> com.github.mikephil.charting.data.ChartData:
    float mYMax -> mYMax
    float mYMin -> mYMin
    float mLeftAxisMax -> mLeftAxisMax
    float mLeftAxisMin -> mLeftAxisMin
    float mRightAxisMax -> mRightAxisMax
    float mRightAxisMin -> mRightAxisMin
    float mYValueSum -> mYValueSum
    int mYValCount -> mYValCount
    float mXValAverageLength -> mXValAverageLength
    java.util.List mXVals -> mXVals
    java.util.List mDataSets -> mDataSets
    java.util.List arrayToList(java.lang.String[]) -> arrayToList
    void init(java.util.List) -> init
    void calcXValAverageLength() -> calcXValAverageLength
    void isLegal(java.util.List) -> isLegal
    void notifyDataChanged() -> notifyDataChanged
    void calcMinMax(java.util.List) -> calcMinMax
    void calcYValueSum(java.util.List) -> calcYValueSum
    void calcYValueCount(java.util.List) -> calcYValueCount
    int getDataSetCount() -> getDataSetCount
    float getYMin() -> getYMin
    float getYMin(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getYMin
    float getYMax() -> getYMax
    float getYMax(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getYMax
    float getXValAverageLength() -> getXValAverageLength
    float getYValueSum() -> getYValueSum
    int getYValCount() -> getYValCount
    java.util.List getXVals() -> getXVals
    void addXValue(java.lang.String) -> addXValue
    void removeXValue(int) -> removeXValue
    java.util.List getDataSets() -> getDataSets
    int getDataSetIndexByLabel(java.util.List,java.lang.String,boolean) -> getDataSetIndexByLabel
    int getXValCount() -> getXValCount
    java.lang.String[] getDataSetLabels() -> getDataSetLabels
    com.github.mikephil.charting.data.Entry getEntryForHighlight(com.github.mikephil.charting.utils.Highlight) -> getEntryForHighlight
    com.github.mikephil.charting.data.DataSet getDataSetByLabel(java.lang.String,boolean) -> getDataSetByLabel
    com.github.mikephil.charting.data.DataSet getDataSetByIndex(int) -> getDataSetByIndex
    void addDataSet(com.github.mikephil.charting.data.DataSet) -> addDataSet
    void handleEmptyAxis(com.github.mikephil.charting.data.DataSet,com.github.mikephil.charting.data.DataSet) -> handleEmptyAxis
    boolean removeDataSet(com.github.mikephil.charting.data.DataSet) -> removeDataSet
    boolean removeDataSet(int) -> removeDataSet
    void addEntry(com.github.mikephil.charting.data.Entry,int) -> addEntry
    boolean removeEntry(com.github.mikephil.charting.data.Entry,int) -> removeEntry
    boolean removeEntry(int,int) -> removeEntry
    com.github.mikephil.charting.data.DataSet getDataSetForEntry(com.github.mikephil.charting.data.Entry) -> getDataSetForEntry
    int[] getColors() -> getColors
    int getIndexOfDataSet(com.github.mikephil.charting.data.DataSet) -> getIndexOfDataSet
    com.github.mikephil.charting.data.DataSet getFirstLeft() -> getFirstLeft
    com.github.mikephil.charting.data.DataSet getFirstRight() -> getFirstRight
    java.util.List generateXVals(int,int) -> generateXVals
    void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter) -> setValueFormatter
    void setValueTextColor(int) -> setValueTextColor
    void setValueTypeface(android.graphics.Typeface) -> setValueTypeface
    void setValueTextSize(float) -> setValueTextSize
    void setDrawValues(boolean) -> setDrawValues
    void clearValues() -> clearValues
    boolean contains(com.github.mikephil.charting.data.Entry) -> contains
    boolean contains(com.github.mikephil.charting.data.DataSet) -> contains
com.github.mikephil.charting.data.CombinedData -> com.github.mikephil.charting.data.CombinedData:
    com.github.mikephil.charting.data.LineData mLineData -> mLineData
    com.github.mikephil.charting.data.BarData mBarData -> mBarData
    com.github.mikephil.charting.data.ScatterData mScatterData -> mScatterData
    com.github.mikephil.charting.data.CandleData mCandleData -> mCandleData
    com.github.mikephil.charting.data.BubbleData mBubbleData -> mBubbleData
    void setData(com.github.mikephil.charting.data.LineData) -> setData
    void setData(com.github.mikephil.charting.data.BarData) -> setData
    void setData(com.github.mikephil.charting.data.ScatterData) -> setData
    void setData(com.github.mikephil.charting.data.CandleData) -> setData
    void setData(com.github.mikephil.charting.data.BubbleData) -> setData
    com.github.mikephil.charting.data.BubbleData getBubbleData() -> getBubbleData
    com.github.mikephil.charting.data.LineData getLineData() -> getLineData
    com.github.mikephil.charting.data.BarData getBarData() -> getBarData
    com.github.mikephil.charting.data.ScatterData getScatterData() -> getScatterData
    com.github.mikephil.charting.data.CandleData getCandleData() -> getCandleData
    void notifyDataChanged() -> notifyDataChanged
com.github.mikephil.charting.data.DataSet -> com.github.mikephil.charting.data.DataSet:
    java.util.List mColors -> mColors
    java.util.List mYVals -> mYVals
    float mYMax -> mYMax
    float mYMin -> mYMin
    float mYValueSum -> mYValueSum
    java.lang.String mLabel -> mLabel
    boolean mVisible -> mVisible
    boolean mDrawValues -> mDrawValues
    int mValueColor -> mValueColor
    float mValueTextSize -> mValueTextSize
    android.graphics.Typeface mValueTypeface -> mValueTypeface
    com.github.mikephil.charting.utils.ValueFormatter mValueFormatter -> mValueFormatter
    com.github.mikephil.charting.components.YAxis$AxisDependency mAxisDependency -> mAxisDependency
    void notifyDataSetChanged() -> notifyDataSetChanged
    void calcMinMax() -> calcMinMax
    void calcYValueSum() -> calcYValueSum
    int getEntryCount() -> getEntryCount
    float getYValForXIndex(int) -> getYValForXIndex
    com.github.mikephil.charting.data.Entry getEntryForXIndex(int) -> getEntryForXIndex
    java.util.List getEntriesForXIndex(int) -> getEntriesForXIndex
    java.util.List getYVals() -> getYVals
    float getYValueSum() -> getYValueSum
    float getYMin() -> getYMin
    float getYMax() -> getYMax
    int getValueCount() -> getValueCount
    int getIndexInEntries(int) -> getIndexInEntries
    com.github.mikephil.charting.data.DataSet copy() -> copy
    java.lang.String toString() -> toString
    java.lang.String toSimpleString() -> toSimpleString
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency() -> getAxisDependency
    void setAxisDependency(com.github.mikephil.charting.components.YAxis$AxisDependency) -> setAxisDependency
    void setDrawValues(boolean) -> setDrawValues
    boolean isDrawValuesEnabled() -> isDrawValuesEnabled
    void addEntry(com.github.mikephil.charting.data.Entry) -> addEntry
    boolean removeEntry(com.github.mikephil.charting.data.Entry) -> removeEntry
    boolean removeEntry(int) -> removeEntry
    void setColors(java.util.List) -> setColors
    void setColors(int[]) -> setColors
    void setColors(int[],android.content.Context) -> setColors
    void addColor(int) -> addColor
    void setColor(int) -> setColor
    java.util.List getColors() -> getColors
    int getColor(int) -> getColor
    int getColor() -> getColor
    void resetColors() -> resetColors
    int getEntryPosition(com.github.mikephil.charting.data.Entry) -> getEntryPosition
    void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter) -> setValueFormatter
    com.github.mikephil.charting.utils.ValueFormatter getValueFormatter() -> getValueFormatter
    boolean needsDefaultFormatter() -> needsDefaultFormatter
    void setValueTextColor(int) -> setValueTextColor
    int getValueTextColor() -> getValueTextColor
    void setValueTypeface(android.graphics.Typeface) -> setValueTypeface
    android.graphics.Typeface getValueTypeface() -> getValueTypeface
    void setValueTextSize(float) -> setValueTextSize
    float getValueTextSize() -> getValueTextSize
    boolean contains(com.github.mikephil.charting.data.Entry) -> contains
    void clear() -> clear
com.github.mikephil.charting.data.Entry -> com.github.mikephil.charting.data.Entry:
    float mVal -> mVal
    int mXIndex -> mXIndex
    java.lang.Object mData -> mData
    int getXIndex() -> getXIndex
    void setXIndex(int) -> setXIndex
    float getVal() -> getVal
    void setVal(float) -> setVal
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    com.github.mikephil.charting.data.Entry copy() -> copy
    boolean equalTo(com.github.mikephil.charting.data.Entry) -> equalTo
    java.lang.String toString() -> toString
com.github.mikephil.charting.data.LineData -> com.github.mikephil.charting.data.LineData:
    java.util.List toList(com.github.mikephil.charting.data.LineDataSet) -> toList
com.github.mikephil.charting.data.LineDataSet -> com.github.mikephil.charting.data.LineDataSet:
    java.util.List mCircleColors -> mCircleColors
    int mCircleColorHole -> mCircleColorHole
    float mCircleSize -> mCircleSize
    float mCubicIntensity -> mCubicIntensity
    android.graphics.DashPathEffect mDashPathEffect -> mDashPathEffect
    boolean mDrawCircles -> mDrawCircles
    boolean mDrawCubic -> mDrawCubic
    boolean mDrawCircleHole -> mDrawCircleHole
    com.github.mikephil.charting.data.DataSet copy() -> copy
    void setCubicIntensity(float) -> setCubicIntensity
    float getCubicIntensity() -> getCubicIntensity
    void setCircleSize(float) -> setCircleSize
    float getCircleSize() -> getCircleSize
    void enableDashedLine(float,float,float) -> enableDashedLine
    void disableDashedLine() -> disableDashedLine
    boolean isDashedLineEnabled() -> isDashedLineEnabled
    android.graphics.DashPathEffect getDashPathEffect() -> getDashPathEffect
    void setDrawCircles(boolean) -> setDrawCircles
    boolean isDrawCirclesEnabled() -> isDrawCirclesEnabled
    void setDrawCubic(boolean) -> setDrawCubic
    boolean isDrawCubicEnabled() -> isDrawCubicEnabled
    java.util.List getCircleColors() -> getCircleColors
    int getCircleColor(int) -> getCircleColor
    void setCircleColors(java.util.List) -> setCircleColors
    void setCircleColors(int[]) -> setCircleColors
    void setCircleColors(int[],android.content.Context) -> setCircleColors
    void setCircleColor(int) -> setCircleColor
    void resetCircleColors() -> resetCircleColors
    void setCircleColorHole(int) -> setCircleColorHole
    int getCircleHoleColor() -> getCircleHoleColor
    void setDrawCircleHole(boolean) -> setDrawCircleHole
    boolean isDrawCircleHoleEnabled() -> isDrawCircleHoleEnabled
com.github.mikephil.charting.data.LineRadarDataSet -> com.github.mikephil.charting.data.LineRadarDataSet:
    int mFillColor -> mFillColor
    int mFillAlpha -> mFillAlpha
    float mLineWidth -> mLineWidth
    boolean mDrawFilled -> mDrawFilled
    int getFillColor() -> getFillColor
    void setFillColor(int) -> setFillColor
    int getFillAlpha() -> getFillAlpha
    void setFillAlpha(int) -> setFillAlpha
    void setLineWidth(float) -> setLineWidth
    float getLineWidth() -> getLineWidth
    void setDrawFilled(boolean) -> setDrawFilled
    boolean isDrawFilledEnabled() -> isDrawFilledEnabled
com.github.mikephil.charting.data.PieData -> com.github.mikephil.charting.data.PieData:
    java.util.List toList(com.github.mikephil.charting.data.PieDataSet) -> toList
    void setDataSet(com.github.mikephil.charting.data.PieDataSet) -> setDataSet
    com.github.mikephil.charting.data.PieDataSet getDataSet() -> getDataSet
    com.github.mikephil.charting.data.PieDataSet getDataSetByIndex(int) -> getDataSetByIndex
    com.github.mikephil.charting.data.PieDataSet getDataSetByLabel(java.lang.String,boolean) -> getDataSetByLabel
    com.github.mikephil.charting.data.DataSet getDataSetByLabel(java.lang.String,boolean) -> getDataSetByLabel
    com.github.mikephil.charting.data.DataSet getDataSetByIndex(int) -> getDataSetByIndex
com.github.mikephil.charting.data.PieDataSet -> com.github.mikephil.charting.data.PieDataSet:
    float mSliceSpace -> mSliceSpace
    float mShift -> mShift
    com.github.mikephil.charting.data.DataSet copy() -> copy
    void setSliceSpace(float) -> setSliceSpace
    float getSliceSpace() -> getSliceSpace
    void setSelectionShift(float) -> setSelectionShift
    float getSelectionShift() -> getSelectionShift
com.github.mikephil.charting.data.RadarData -> com.github.mikephil.charting.data.RadarData:
    java.util.List toList(com.github.mikephil.charting.data.RadarDataSet) -> toList
com.github.mikephil.charting.data.RadarDataSet -> com.github.mikephil.charting.data.RadarDataSet:
    com.github.mikephil.charting.data.DataSet copy() -> copy
com.github.mikephil.charting.data.ScatterData -> com.github.mikephil.charting.data.ScatterData:
    java.util.List toList(com.github.mikephil.charting.data.ScatterDataSet) -> toList
    float getGreatestShapeSize() -> getGreatestShapeSize
com.github.mikephil.charting.data.ScatterDataSet -> com.github.mikephil.charting.data.ScatterDataSet:
    float mShapeSize -> mShapeSize
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape mScatterShape -> mScatterShape
    android.graphics.Path mCustomScatterPath -> mCustomScatterPath
    com.github.mikephil.charting.data.DataSet copy() -> copy
    void setScatterShapeSize(float) -> setScatterShapeSize
    float getScatterShapeSize() -> getScatterShapeSize
    void setScatterShape(com.github.mikephil.charting.charts.ScatterChart$ScatterShape) -> setScatterShape
    com.github.mikephil.charting.charts.ScatterChart$ScatterShape getScatterShape() -> getScatterShape
    void setCustomScatterShape(android.graphics.Path) -> setCustomScatterShape
    android.graphics.Path getCustomScatterShape() -> getCustomScatterShape
com.github.mikephil.charting.data.filter.Approximator -> com.github.mikephil.charting.data.filter.Approximator:
    com.github.mikephil.charting.data.filter.Approximator$ApproximatorType mType -> mType
    double mTolerance -> mTolerance
    float mScaleRatio -> mScaleRatio
    float mDeltaRatio -> mDeltaRatio
    boolean[] keep -> keep
    int[] $SWITCH_TABLE$com$github$mikephil$charting$data$filter$Approximator$ApproximatorType -> $SWITCH_TABLE$com$github$mikephil$charting$data$filter$Approximator$ApproximatorType
    void setup(com.github.mikephil.charting.data.filter.Approximator$ApproximatorType,double) -> setup
    void setTolerance(double) -> setTolerance
    void setType(com.github.mikephil.charting.data.filter.Approximator$ApproximatorType) -> setType
    void setRatios(float,float) -> setRatios
    java.util.List filter(java.util.List) -> filter
    java.util.List filter(java.util.List,double) -> filter
    java.util.List reduceWithDouglasPeuker(java.util.List,double) -> reduceWithDouglasPeuker
    void algorithmDouglasPeucker(java.util.List,double,int,int) -> algorithmDouglasPeucker
    double calcPointToLineDistance(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.data.Entry) -> calcPointToLineDistance
    double calcAngleBetweenLines(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.data.Entry) -> calcAngleBetweenLines
    double calcAngleWithRatios(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.data.Entry) -> calcAngleWithRatios
    double calcAngle(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.data.Entry) -> calcAngle
    int[] $SWITCH_TABLE$com$github$mikephil$charting$data$filter$Approximator$ApproximatorType() -> $SWITCH_TABLE$com$github$mikephil$charting$data$filter$Approximator$ApproximatorType
com.github.mikephil.charting.data.filter.Approximator$ApproximatorType -> com.github.mikephil.charting.data.filter.Approximator$ApproximatorType:
    com.github.mikephil.charting.data.filter.Approximator$ApproximatorType NONE -> NONE
    com.github.mikephil.charting.data.filter.Approximator$ApproximatorType DOUGLAS_PEUCKER -> DOUGLAS_PEUCKER
    com.github.mikephil.charting.data.filter.Approximator$ApproximatorType[] ENUM$VALUES -> ENUM$VALUES
    com.github.mikephil.charting.data.filter.Approximator$ApproximatorType[] values() -> values
    com.github.mikephil.charting.data.filter.Approximator$ApproximatorType valueOf(java.lang.String) -> valueOf
com.github.mikephil.charting.exception.DrawingDataSetNotCreatedException -> com.github.mikephil.charting.exception.DrawingDataSetNotCreatedException:
    long serialVersionUID -> serialVersionUID
com.github.mikephil.charting.interfaces.BarDataProvider -> com.github.mikephil.charting.interfaces.BarDataProvider:
    com.github.mikephil.charting.data.BarData getBarData() -> getBarData
    boolean isDrawBarShadowEnabled() -> isDrawBarShadowEnabled
    boolean isDrawValueAboveBarEnabled() -> isDrawValueAboveBarEnabled
    boolean isDrawHighlightArrowEnabled() -> isDrawHighlightArrowEnabled
    boolean isDrawValuesForWholeStackEnabled() -> isDrawValuesForWholeStackEnabled
com.github.mikephil.charting.interfaces.BarLineScatterCandleDataProvider -> com.github.mikephil.charting.interfaces.BarLineScatterCandleDataProvider:
    com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency) -> getTransformer
    int getMaxVisibleCount() -> getMaxVisibleCount
    boolean isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency) -> isInverted
    int getLowestVisibleXIndex() -> getLowestVisibleXIndex
    int getHighestVisibleXIndex() -> getHighestVisibleXIndex
com.github.mikephil.charting.interfaces.BubbleDataProvider -> com.github.mikephil.charting.interfaces.BubbleDataProvider:
    com.github.mikephil.charting.data.BubbleData getBubbleData() -> getBubbleData
com.github.mikephil.charting.interfaces.CandleDataProvider -> com.github.mikephil.charting.interfaces.CandleDataProvider:
    com.github.mikephil.charting.data.CandleData getCandleData() -> getCandleData
com.github.mikephil.charting.interfaces.ChartInterface -> com.github.mikephil.charting.interfaces.ChartInterface:
    float getXChartMin() -> getXChartMin
    float getXChartMax() -> getXChartMax
    float getYChartMin() -> getYChartMin
    float getYChartMax() -> getYChartMax
    int getXValCount() -> getXValCount
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.PointF getCenterOfView() -> getCenterOfView
    android.graphics.PointF getCenterOffsets() -> getCenterOffsets
    android.graphics.RectF getContentRect() -> getContentRect
    com.github.mikephil.charting.utils.ValueFormatter getDefaultValueFormatter() -> getDefaultValueFormatter
com.github.mikephil.charting.interfaces.LineDataProvider -> com.github.mikephil.charting.interfaces.LineDataProvider:
    com.github.mikephil.charting.data.LineData getLineData() -> getLineData
    void setFillFormatter(com.github.mikephil.charting.utils.FillFormatter) -> setFillFormatter
    com.github.mikephil.charting.utils.FillFormatter getFillFormatter() -> getFillFormatter
com.github.mikephil.charting.interfaces.ScatterDataProvider -> com.github.mikephil.charting.interfaces.ScatterDataProvider:
    com.github.mikephil.charting.data.ScatterData getScatterData() -> getScatterData
com.github.mikephil.charting.jobs.MoveViewJob -> com.github.mikephil.charting.jobs.MoveViewJob:
    com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler -> mViewPortHandler
    float xIndex -> xIndex
    float yValue -> yValue
    com.github.mikephil.charting.utils.Transformer mTrans -> mTrans
    android.view.View view -> view
    void run() -> run
com.github.mikephil.charting.listener.BarLineChartTouchListener -> com.github.mikephil.charting.listener.BarLineChartTouchListener:
    android.graphics.Matrix mMatrix -> mMatrix
    android.graphics.Matrix mSavedMatrix -> mSavedMatrix
    android.graphics.PointF mTouchStartPoint -> mTouchStartPoint
    android.graphics.PointF mTouchPointCenter -> mTouchPointCenter
    int NONE -> NONE
    int DRAG -> DRAG
    int X_ZOOM -> X_ZOOM
    int Y_ZOOM -> Y_ZOOM
    int PINCH_ZOOM -> PINCH_ZOOM
    int POST_ZOOM -> POST_ZOOM
    int mTouchMode -> mTouchMode
    float mSavedXDist -> mSavedXDist
    float mSavedYDist -> mSavedYDist
    float mSavedDist -> mSavedDist
    com.github.mikephil.charting.utils.Highlight mLastHighlighted -> mLastHighlighted
    com.github.mikephil.charting.data.DataSet mClosestDataSetToTouch -> mClosestDataSetToTouch
    com.github.mikephil.charting.charts.BarLineChartBase mChart -> mChart
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    long mDecelerationLastTime -> mDecelerationLastTime
    android.graphics.PointF mDecelerationCurrentPoint -> mDecelerationCurrentPoint
    android.graphics.PointF mDecelerationVelocity -> mDecelerationVelocity
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void saveTouchStart(android.view.MotionEvent) -> saveTouchStart
    void performDrag(android.view.MotionEvent) -> performDrag
    void performZoom(android.view.MotionEvent) -> performZoom
    void performHighlight(android.view.MotionEvent) -> performHighlight
    void performHighlightDrag(android.view.MotionEvent) -> performHighlightDrag
    float distance(float,float,float,float) -> distance
    void midPoint(android.graphics.PointF,android.view.MotionEvent) -> midPoint
    float spacing(android.view.MotionEvent) -> spacing
    float getXDist(android.view.MotionEvent) -> getXDist
    float getYDist(android.view.MotionEvent) -> getYDist
    android.graphics.PointF getTrans(float,float) -> getTrans
    android.graphics.Matrix getMatrix() -> getMatrix
    int getTouchMode() -> getTouchMode
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void stopDeceleration() -> stopDeceleration
    void computeScroll() -> computeScroll
com.github.mikephil.charting.listener.OnChartGestureListener -> com.github.mikephil.charting.listener.OnChartGestureListener:
    void onChartLongPressed(android.view.MotionEvent) -> onChartLongPressed
    void onChartDoubleTapped(android.view.MotionEvent) -> onChartDoubleTapped
    void onChartSingleTapped(android.view.MotionEvent) -> onChartSingleTapped
    void onChartFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onChartFling
    void onChartScale(android.view.MotionEvent,float,float) -> onChartScale
    void onChartTranslate(android.view.MotionEvent,float,float) -> onChartTranslate
com.github.mikephil.charting.listener.OnChartValueSelectedListener -> com.github.mikephil.charting.listener.OnChartValueSelectedListener:
    void onValueSelected(com.github.mikephil.charting.data.Entry,int,com.github.mikephil.charting.utils.Highlight) -> onValueSelected
    void onNothingSelected() -> onNothingSelected
com.github.mikephil.charting.listener.OnDrawLineChartTouchListener -> com.github.mikephil.charting.listener.OnDrawLineChartTouchListener:
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.github.mikephil.charting.listener.OnDrawListener -> com.github.mikephil.charting.listener.OnDrawListener:
    void onEntryAdded(com.github.mikephil.charting.data.Entry) -> onEntryAdded
    void onEntryMoved(com.github.mikephil.charting.data.Entry) -> onEntryMoved
    void onDrawFinished(com.github.mikephil.charting.data.DataSet) -> onDrawFinished
com.github.mikephil.charting.listener.PieRadarChartTouchListener -> com.github.mikephil.charting.listener.PieRadarChartTouchListener:
    int NONE -> NONE
    int ROTATE -> ROTATE
    android.graphics.PointF mTouchStartPoint -> mTouchStartPoint
    com.github.mikephil.charting.charts.PieRadarChartBase mChart -> mChart
    float mStartAngle -> mStartAngle
    int mTouchMode -> mTouchMode
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    java.util.ArrayList _velocitySamples -> _velocitySamples
    long mDecelerationLastTime -> mDecelerationLastTime
    float mDecelerationAngularVelocity -> mDecelerationAngularVelocity
    com.github.mikephil.charting.utils.Highlight mLastHighlight -> mLastHighlight
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void resetVelocity() -> resetVelocity
    void sampleVelocity(float,float) -> sampleVelocity
    float calculateVelocity() -> calculateVelocity
    void setGestureStartAngle(float,float) -> setGestureStartAngle
    void updateGestureRotation(float,float) -> updateGestureRotation
    float distance(float,float,float,float) -> distance
    void stopDeceleration() -> stopDeceleration
    void computeScroll() -> computeScroll
com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample -> com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample:
    long time -> time
    float angle -> angle
    com.github.mikephil.charting.listener.PieRadarChartTouchListener this$0 -> this$0
com.github.mikephil.charting.matrix.Vector3 -> com.github.mikephil.charting.matrix.Vector3:
    float x -> x
    float y -> y
    float z -> z
    com.github.mikephil.charting.matrix.Vector3 ZERO -> ZERO
    com.github.mikephil.charting.matrix.Vector3 UNIT_X -> UNIT_X
    com.github.mikephil.charting.matrix.Vector3 UNIT_Y -> UNIT_Y
    com.github.mikephil.charting.matrix.Vector3 UNIT_Z -> UNIT_Z
    void add(com.github.mikephil.charting.matrix.Vector3) -> add
    void add(float,float,float) -> add
    void subtract(com.github.mikephil.charting.matrix.Vector3) -> subtract
    void subtractMultiple(com.github.mikephil.charting.matrix.Vector3,float) -> subtractMultiple
    void multiply(float) -> multiply
    void multiply(com.github.mikephil.charting.matrix.Vector3) -> multiply
    void divide(float) -> divide
    void set(com.github.mikephil.charting.matrix.Vector3) -> set
    void set(float,float,float) -> set
    float dot(com.github.mikephil.charting.matrix.Vector3) -> dot
    com.github.mikephil.charting.matrix.Vector3 cross(com.github.mikephil.charting.matrix.Vector3) -> cross
    float length() -> length
    float length2() -> length2
    float distance2(com.github.mikephil.charting.matrix.Vector3) -> distance2
    float normalize() -> normalize
    void zero() -> zero
    boolean pointsInSameDirection(com.github.mikephil.charting.matrix.Vector3) -> pointsInSameDirection
com.github.mikephil.charting.renderer.AxisRenderer -> com.github.mikephil.charting.renderer.AxisRenderer:
    com.github.mikephil.charting.utils.Transformer mTrans -> mTrans
    android.graphics.Paint mGridPaint -> mGridPaint
    android.graphics.Paint mAxisLabelPaint -> mAxisLabelPaint
    android.graphics.Paint mAxisLinePaint -> mAxisLinePaint
    android.graphics.Paint mLimitLinePaint -> mLimitLinePaint
    android.graphics.Paint getPaintAxisLabels() -> getPaintAxisLabels
    android.graphics.Paint getPaintGrid() -> getPaintGrid
    android.graphics.Paint getPaintAxisLine() -> getPaintAxisLine
    com.github.mikephil.charting.utils.Transformer getTransformer() -> getTransformer
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
    void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.BarChartRenderer -> com.github.mikephil.charting.renderer.BarChartRenderer:
    com.github.mikephil.charting.interfaces.BarDataProvider mChart -> mChart
    android.graphics.RectF mBarRect -> mBarRect
    com.github.mikephil.charting.buffer.BarBuffer[] mBarBuffers -> mBarBuffers
    android.graphics.Paint mShadowPaint -> mShadowPaint
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.BarDataSet,int) -> drawDataSet
    void prepareBarHighlight(float,float,float,float,com.github.mikephil.charting.utils.Transformer) -> prepareBarHighlight
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawValue(android.graphics.Canvas,java.lang.String,float,float) -> drawValue
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
    float[] getTransformedValues(com.github.mikephil.charting.utils.Transformer,java.util.List,int) -> getTransformedValues
    boolean passesCheck() -> passesCheck
com.github.mikephil.charting.renderer.BubbleChartRenderer -> com.github.mikephil.charting.renderer.BubbleChartRenderer:
    com.github.mikephil.charting.interfaces.BubbleDataProvider mChart -> mChart
    float[] sizeBuffer -> sizeBuffer
    float[] pointBuffer -> pointBuffer
    float[] _hsvBuffer -> _hsvBuffer
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    float getShapeSize(float,float,float) -> getShapeSize
    void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.BubbleDataSet) -> drawDataSet
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
com.github.mikephil.charting.renderer.CandleStickChartRenderer -> com.github.mikephil.charting.renderer.CandleStickChartRenderer:
    com.github.mikephil.charting.interfaces.CandleDataProvider mChart -> mChart
    com.github.mikephil.charting.buffer.CandleShadowBuffer[] mShadowBuffers -> mShadowBuffers
    com.github.mikephil.charting.buffer.CandleBodyBuffer[] mBodyBuffers -> mBodyBuffers
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.CandleDataSet) -> drawDataSet
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
com.github.mikephil.charting.renderer.CombinedChartRenderer -> com.github.mikephil.charting.renderer.CombinedChartRenderer:
    java.util.List mRenderers -> mRenderers
    int[] $SWITCH_TABLE$com$github$mikephil$charting$charts$CombinedChart$DrawOrder -> $SWITCH_TABLE$com$github$mikephil$charting$charts$CombinedChart$DrawOrder
    void createRenderers(com.github.mikephil.charting.charts.CombinedChart,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler) -> createRenderers
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
    void calcXBounds(com.github.mikephil.charting.interfaces.BarLineScatterCandleDataProvider,int) -> calcXBounds
    com.github.mikephil.charting.renderer.DataRenderer getSubRenderer(int) -> getSubRenderer
    int[] $SWITCH_TABLE$com$github$mikephil$charting$charts$CombinedChart$DrawOrder() -> $SWITCH_TABLE$com$github$mikephil$charting$charts$CombinedChart$DrawOrder
com.github.mikephil.charting.renderer.DataRenderer -> com.github.mikephil.charting.renderer.DataRenderer:
    com.github.mikephil.charting.animation.ChartAnimator mAnimator -> mAnimator
    android.graphics.Paint mRenderPaint -> mRenderPaint
    android.graphics.Paint mHighlightPaint -> mHighlightPaint
    android.graphics.Paint mDrawPaint -> mDrawPaint
    android.graphics.Paint mValuePaint -> mValuePaint
    android.graphics.Paint getPaintValues() -> getPaintValues
    android.graphics.Paint getPaintHighlight() -> getPaintHighlight
    android.graphics.Paint getPaintRender() -> getPaintRender
    void applyValueTextStyle(com.github.mikephil.charting.data.DataSet) -> applyValueTextStyle
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
com.github.mikephil.charting.renderer.HorizontalBarChartRenderer -> com.github.mikephil.charting.renderer.HorizontalBarChartRenderer:
    float mYOffset -> mYOffset
    void initBuffers() -> initBuffers
    void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.BarDataSet,int) -> drawDataSet
    void drawValues(android.graphics.Canvas) -> drawValues
    void prepareBarHighlight(float,float,float,float,com.github.mikephil.charting.utils.Transformer) -> prepareBarHighlight
    float[] getTransformedValues(com.github.mikephil.charting.utils.Transformer,java.util.List,int) -> getTransformedValues
    void drawValue(android.graphics.Canvas,java.lang.String,float,float) -> drawValue
    boolean passesCheck() -> passesCheck
com.github.mikephil.charting.renderer.LegendRenderer -> com.github.mikephil.charting.renderer.LegendRenderer:
    android.graphics.Paint mLegendLabelPaint -> mLegendLabelPaint
    android.graphics.Paint mLegendFormPaint -> mLegendFormPaint
    com.github.mikephil.charting.components.Legend mLegend -> mLegend
    int[] $SWITCH_TABLE$com$github$mikephil$charting$components$Legend$LegendPosition -> $SWITCH_TABLE$com$github$mikephil$charting$components$Legend$LegendPosition
    int[] $SWITCH_TABLE$com$github$mikephil$charting$components$Legend$LegendForm -> $SWITCH_TABLE$com$github$mikephil$charting$components$Legend$LegendForm
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getFormPaint() -> getFormPaint
    void computeLegend(com.github.mikephil.charting.data.ChartData) -> computeLegend
    void renderLegend(android.graphics.Canvas) -> renderLegend
    void drawForm(android.graphics.Canvas,float,float,int,com.github.mikephil.charting.components.Legend) -> drawForm
    void drawLabel(android.graphics.Canvas,float,float,java.lang.String) -> drawLabel
    int[] $SWITCH_TABLE$com$github$mikephil$charting$components$Legend$LegendPosition() -> $SWITCH_TABLE$com$github$mikephil$charting$components$Legend$LegendPosition
    int[] $SWITCH_TABLE$com$github$mikephil$charting$components$Legend$LegendForm() -> $SWITCH_TABLE$com$github$mikephil$charting$components$Legend$LegendForm
com.github.mikephil.charting.renderer.LineChartRenderer -> com.github.mikephil.charting.renderer.LineChartRenderer:
    com.github.mikephil.charting.interfaces.LineDataProvider mChart -> mChart
    android.graphics.Paint mCirclePaintInner -> mCirclePaintInner
    android.graphics.Bitmap mDrawBitmap -> mDrawBitmap
    android.graphics.Canvas mBitmapCanvas -> mBitmapCanvas
    android.graphics.Path cubicPath -> cubicPath
    android.graphics.Path cubicFillPath -> cubicFillPath
    com.github.mikephil.charting.buffer.LineBuffer[] mLineBuffers -> mLineBuffers
    com.github.mikephil.charting.buffer.CircleBuffer[] mCircleBuffers -> mCircleBuffers
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet) -> drawDataSet
    void drawCubic(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet,java.util.List) -> drawCubic
    void drawCubicFill(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet,android.graphics.Path,com.github.mikephil.charting.utils.Transformer,int,int) -> drawCubicFill
    void drawLinear(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet,java.util.List) -> drawLinear
    void drawLinearFill(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet,java.util.List,int,int,com.github.mikephil.charting.utils.Transformer) -> drawLinearFill
    android.graphics.Path generateFilledPath(java.util.List,float,int,int) -> generateFilledPath
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawCircles(android.graphics.Canvas) -> drawCircles
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
com.github.mikephil.charting.renderer.PieChartRenderer -> com.github.mikephil.charting.renderer.PieChartRenderer:
    com.github.mikephil.charting.charts.PieChart mChart -> mChart
    android.graphics.Paint mHolePaint -> mHolePaint
    android.graphics.Paint mTransparentCirclePaint -> mTransparentCirclePaint
    android.graphics.Paint mCenterTextPaint -> mCenterTextPaint
    android.graphics.Bitmap mDrawBitmap -> mDrawBitmap
    android.graphics.Canvas mBitmapCanvas -> mBitmapCanvas
    android.graphics.Paint getPaintHole() -> getPaintHole
    android.graphics.Paint getPaintTransparentCircle() -> getPaintTransparentCircle
    android.graphics.Paint getPaintCenterText() -> getPaintCenterText
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.PieDataSet) -> drawDataSet
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawHole(android.graphics.Canvas) -> drawHole
    void drawCenterText(android.graphics.Canvas) -> drawCenterText
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
com.github.mikephil.charting.renderer.RadarChartRenderer -> com.github.mikephil.charting.renderer.RadarChartRenderer:
    com.github.mikephil.charting.charts.RadarChart mChart -> mChart
    android.graphics.Paint mWebPaint -> mWebPaint
    android.graphics.Paint getWebPaint() -> getWebPaint
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.RadarDataSet) -> drawDataSet
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawWeb(android.graphics.Canvas) -> drawWeb
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
com.github.mikephil.charting.renderer.Renderer -> com.github.mikephil.charting.renderer.Renderer:
    com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler -> mViewPortHandler
    int mMinX -> mMinX
    int mMaxX -> mMaxX
    boolean fitsBounds(float,float,float) -> fitsBounds
    void calcXBounds(com.github.mikephil.charting.interfaces.BarLineScatterCandleDataProvider,int) -> calcXBounds
com.github.mikephil.charting.renderer.ScatterChartRenderer -> com.github.mikephil.charting.renderer.ScatterChartRenderer:
    com.github.mikephil.charting.interfaces.ScatterDataProvider mChart -> mChart
    com.github.mikephil.charting.buffer.ScatterBuffer[] mScatterBuffers -> mScatterBuffers
    int[] $SWITCH_TABLE$com$github$mikephil$charting$charts$ScatterChart$ScatterShape -> $SWITCH_TABLE$com$github$mikephil$charting$charts$ScatterChart$ScatterShape
    void initBuffers() -> initBuffers
    void drawData(android.graphics.Canvas) -> drawData
    void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.ScatterDataSet) -> drawDataSet
    void drawValues(android.graphics.Canvas) -> drawValues
    void drawExtras(android.graphics.Canvas) -> drawExtras
    void drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.utils.Highlight[]) -> drawHighlighted
    int[] $SWITCH_TABLE$com$github$mikephil$charting$charts$ScatterChart$ScatterShape() -> $SWITCH_TABLE$com$github$mikephil$charting$charts$ScatterChart$ScatterShape
com.github.mikephil.charting.renderer.XAxisRenderer -> com.github.mikephil.charting.renderer.XAxisRenderer:
    com.github.mikephil.charting.components.XAxis mXAxis -> mXAxis
    void computeAxis(float,java.util.List) -> computeAxis
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    void drawLabels(android.graphics.Canvas,float) -> drawLabels
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
    void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.XAxisRendererBarChart -> com.github.mikephil.charting.renderer.XAxisRendererBarChart:
    com.github.mikephil.charting.charts.BarChart mChart -> mChart
    void drawLabels(android.graphics.Canvas,float) -> drawLabels
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
com.github.mikephil.charting.renderer.XAxisRendererHorizontalBarChart -> com.github.mikephil.charting.renderer.XAxisRendererHorizontalBarChart:
    void computeAxis(float,java.util.List) -> computeAxis
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    void drawLabels(android.graphics.Canvas,float) -> drawLabels
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
    void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.XAxisRendererRadarChart -> com.github.mikephil.charting.renderer.XAxisRendererRadarChart:
    com.github.mikephil.charting.charts.RadarChart mChart -> mChart
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.YAxisRenderer -> com.github.mikephil.charting.renderer.YAxisRenderer:
    com.github.mikephil.charting.components.YAxis mYAxis -> mYAxis
    void computeAxis(float,float) -> computeAxis
    void computeAxisValues(float,float) -> computeAxisValues
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    void drawYLabels(android.graphics.Canvas,float,float[],float) -> drawYLabels
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
    void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.YAxisRendererHorizontalBarChart -> com.github.mikephil.charting.renderer.YAxisRendererHorizontalBarChart:
    void computeAxis(float,float) -> computeAxis
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    void renderAxisLine(android.graphics.Canvas) -> renderAxisLine
    void drawYLabels(android.graphics.Canvas,float,float[],float) -> drawYLabels
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
    void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.renderer.YAxisRendererRadarChart -> com.github.mikephil.charting.renderer.YAxisRendererRadarChart:
    com.github.mikephil.charting.charts.RadarChart mChart -> mChart
    void computeAxis(float,float) -> computeAxis
    void computeAxisValues(float,float) -> computeAxisValues
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    void renderLimitLines(android.graphics.Canvas) -> renderLimitLines
com.github.mikephil.charting.utils.ColorFormatter -> com.github.mikephil.charting.utils.ColorFormatter:
    int getColor(com.github.mikephil.charting.data.Entry,int) -> getColor
com.github.mikephil.charting.utils.ColorTemplate -> com.github.mikephil.charting.utils.ColorTemplate:
    int COLOR_NONE -> COLOR_NONE
    int[] LIBERTY_COLORS -> LIBERTY_COLORS
    int[] JOYFUL_COLORS -> JOYFUL_COLORS
    int[] PASTEL_COLORS -> PASTEL_COLORS
    int[] COLORFUL_COLORS -> COLORFUL_COLORS
    int[] VORDIPLOM_COLORS -> VORDIPLOM_COLORS
    int getHoloBlue() -> getHoloBlue
    java.util.List createColors(android.content.res.Resources,int[]) -> createColors
    java.util.List createColors(int[]) -> createColors
com.github.mikephil.charting.utils.DefaultValueFormatter -> com.github.mikephil.charting.utils.DefaultValueFormatter:
    java.text.DecimalFormat mFormat -> mFormat
    java.lang.String getFormattedValue(float) -> getFormattedValue
com.github.mikephil.charting.utils.FileUtils -> com.github.mikephil.charting.utils.FileUtils:
    java.lang.String LOG -> LOG
    java.util.List loadEntriesFromFile(java.lang.String) -> loadEntriesFromFile
    java.util.List loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String) -> loadEntriesFromAssets
    void saveToSdCard(java.util.List,java.lang.String) -> saveToSdCard
    java.util.List loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String) -> loadBarEntriesFromAssets
com.github.mikephil.charting.utils.FillFormatter -> com.github.mikephil.charting.utils.FillFormatter:
    float getFillLinePosition(com.github.mikephil.charting.data.LineDataSet,com.github.mikephil.charting.data.LineData,float,float) -> getFillLinePosition
com.github.mikephil.charting.utils.Highlight -> com.github.mikephil.charting.utils.Highlight:
    int mXIndex -> mXIndex
    int mDataSetIndex -> mDataSetIndex
    int mStackIndex -> mStackIndex
    int getDataSetIndex() -> getDataSetIndex
    int getXIndex() -> getXIndex
    int getStackIndex() -> getStackIndex
    boolean equalTo(com.github.mikephil.charting.utils.Highlight) -> equalTo
    java.lang.String toString() -> toString
com.github.mikephil.charting.utils.LargeValueFormatter -> com.github.mikephil.charting.utils.LargeValueFormatter:
    java.lang.String[] SUFFIX -> SUFFIX
    int MAX_LENGTH -> MAX_LENGTH
    java.text.DecimalFormat mFormat -> mFormat
    java.lang.String mText -> mText
    java.lang.String getFormattedValue(float) -> getFormattedValue
    java.lang.String makePretty(double) -> makePretty
com.github.mikephil.charting.utils.PercentFormatter -> com.github.mikephil.charting.utils.PercentFormatter:
    java.text.DecimalFormat mFormat -> mFormat
    java.lang.String getFormattedValue(float) -> getFormattedValue
com.github.mikephil.charting.utils.PointD -> com.github.mikephil.charting.utils.PointD:
    double x -> x
    double y -> y
    java.lang.String toString() -> toString
com.github.mikephil.charting.utils.SelInfo -> com.github.mikephil.charting.utils.SelInfo:
    float val -> val
    int dataSetIndex -> dataSetIndex
    com.github.mikephil.charting.data.DataSet dataSet -> dataSet
com.github.mikephil.charting.utils.Transformer -> com.github.mikephil.charting.utils.Transformer:
    android.graphics.Matrix mMatrixValueToPx -> mMatrixValueToPx
    android.graphics.Matrix mMatrixOffset -> mMatrixOffset
    com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler -> mViewPortHandler
    void prepareMatrixValuePx(float,float,float,float) -> prepareMatrixValuePx
    void prepareMatrixOffset(boolean) -> prepareMatrixOffset
    float[] generateTransformedValuesScatter(java.util.List,float) -> generateTransformedValuesScatter
    float[] generateTransformedValuesBubble(java.util.List,float,float,int,int) -> generateTransformedValuesBubble
    float[] generateTransformedValuesLine(java.util.List,float,float,int,int) -> generateTransformedValuesLine
    float[] generateTransformedValuesCandle(java.util.List,float,float,int,int) -> generateTransformedValuesCandle
    float[] generateTransformedValuesBarChart(java.util.List,int,com.github.mikephil.charting.data.BarData,float) -> generateTransformedValuesBarChart
    float[] generateTransformedValuesHorizontalBarChart(java.util.List,int,com.github.mikephil.charting.data.BarData,float) -> generateTransformedValuesHorizontalBarChart
    void pathValueToPixel(android.graphics.Path) -> pathValueToPixel
    void pathValuesToPixel(java.util.List) -> pathValuesToPixel
    void pointValuesToPixel(float[]) -> pointValuesToPixel
    void rectValueToPixel(android.graphics.RectF) -> rectValueToPixel
    void rectValueToPixel(android.graphics.RectF,float) -> rectValueToPixel
    void rectValueToPixelHorizontal(android.graphics.RectF,float) -> rectValueToPixelHorizontal
    void rectValuesToPixel(java.util.List) -> rectValuesToPixel
    void pixelsToValue(float[]) -> pixelsToValue
    com.github.mikephil.charting.utils.PointD getValuesByTouchPoint(float,float) -> getValuesByTouchPoint
    android.graphics.Matrix getValueMatrix() -> getValueMatrix
    android.graphics.Matrix getOffsetMatrix() -> getOffsetMatrix
com.github.mikephil.charting.utils.TransformerHorizontalBarChart -> com.github.mikephil.charting.utils.TransformerHorizontalBarChart:
    void prepareMatrixOffset(boolean) -> prepareMatrixOffset
com.github.mikephil.charting.utils.Utils -> com.github.mikephil.charting.utils.Utils:
    android.util.DisplayMetrics mMetrics -> mMetrics
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int[] POW_10 -> POW_10
    void init(android.content.Context) -> init
    void init(android.content.res.Resources) -> init
    java.lang.String formatDecimal(double,int) -> formatDecimal
    float convertDpToPixel(float) -> convertDpToPixel
    float convertPixelsToDp(float) -> convertPixelsToDp
    int calcTextWidth(android.graphics.Paint,java.lang.String) -> calcTextWidth
    int calcTextHeight(android.graphics.Paint,java.lang.String) -> calcTextHeight
    int getLegendFormatDigits(float,int) -> getLegendFormatDigits
    java.lang.String formatNumber(float,int,boolean) -> formatNumber
    float roundToNextSignificant(double) -> roundToNextSignificant
    int getDecimals(float) -> getDecimals
    int[] convertIntegers(java.util.List) -> convertIntegers
    java.lang.String[] convertStrings(java.util.List) -> convertStrings
    double nextUp(double) -> nextUp
    int getClosestDataSetIndex(java.util.List,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getClosestDataSetIndex
    float getMinimumDistance(java.util.List,float,com.github.mikephil.charting.components.YAxis$AxisDependency) -> getMinimumDistance
    android.graphics.PointF getPosition(android.graphics.PointF,float,float) -> getPosition
    void velocityTrackerPointerUpCleanUpIfNecessary(android.view.MotionEvent,android.view.VelocityTracker) -> velocityTrackerPointerUpCleanUpIfNecessary
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    int getMinimumFlingVelocity() -> getMinimumFlingVelocity
    int getMaximumFlingVelocity() -> getMaximumFlingVelocity
    float getNormalizedAngle(float) -> getNormalizedAngle
com.github.mikephil.charting.utils.ValueFormatter -> com.github.mikephil.charting.utils.ValueFormatter:
    java.lang.String getFormattedValue(float) -> getFormattedValue
com.github.mikephil.charting.utils.ViewPortHandler -> com.github.mikephil.charting.utils.ViewPortHandler:
    android.graphics.Matrix mMatrixTouch -> mMatrixTouch
    android.graphics.RectF mContentRect -> mContentRect
    float mChartWidth -> mChartWidth
    float mChartHeight -> mChartHeight
    float mMinScaleY -> mMinScaleY
    float mMinScaleX -> mMinScaleX
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTransOffsetX -> mTransOffsetX
    float mTransOffsetY -> mTransOffsetY
    void setChartDimens(float,float) -> setChartDimens
    boolean hasChartDimens() -> hasChartDimens
    void restrainViewPort(float,float,float,float) -> restrainViewPort
    float offsetLeft() -> offsetLeft
    float offsetRight() -> offsetRight
    float offsetTop() -> offsetTop
    float offsetBottom() -> offsetBottom
    float contentTop() -> contentTop
    float contentLeft() -> contentLeft
    float contentRight() -> contentRight
    float contentBottom() -> contentBottom
    float contentWidth() -> contentWidth
    float contentHeight() -> contentHeight
    android.graphics.RectF getContentRect() -> getContentRect
    android.graphics.PointF getContentCenter() -> getContentCenter
    float getChartHeight() -> getChartHeight
    float getChartWidth() -> getChartWidth
    android.graphics.Matrix zoomIn(float,float) -> zoomIn
    android.graphics.Matrix zoomOut(float,float) -> zoomOut
    android.graphics.Matrix zoom(float,float,float,float) -> zoom
    android.graphics.Matrix fitScreen() -> fitScreen
    void centerViewPort(float[],android.view.View) -> centerViewPort
    android.graphics.Matrix refresh(android.graphics.Matrix,android.view.View,boolean) -> refresh
    void limitTransAndScale(android.graphics.Matrix,android.graphics.RectF) -> limitTransAndScale
    void setMinimumScaleX(float) -> setMinimumScaleX
    void setMinimumScaleY(float) -> setMinimumScaleY
    android.graphics.Matrix getMatrixTouch() -> getMatrixTouch
    boolean isInBoundsX(float) -> isInBoundsX
    boolean isInBoundsY(float) -> isInBoundsY
    boolean isInBounds(float,float) -> isInBounds
    boolean isInBoundsLeft(float) -> isInBoundsLeft
    boolean isInBoundsRight(float) -> isInBoundsRight
    boolean isInBoundsTop(float) -> isInBoundsTop
    boolean isInBoundsBottom(float) -> isInBoundsBottom
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    boolean isFullyZoomedOut() -> isFullyZoomedOut
    boolean isFullyZoomedOutY() -> isFullyZoomedOutY
    boolean isFullyZoomedOutX() -> isFullyZoomedOutX
    void setDragOffsetX(float) -> setDragOffsetX
    void setDragOffsetY(float) -> setDragOffsetY
    boolean hasNoDragOffset() -> hasNoDragOffset
mmmobile.android.Home -> mmmobile.android.Home:
    int sampleRate -> a
    int channelConfiguration -> b
    int audioEncoding -> c
    ca.uol.aig.fftpack.RealDoubleFFT transformer -> l
    int blockSize -> d
    boolean started -> e
    mmmobile.android.Home$AnalyseAudioTask analyseAudioTask -> f
    com.github.mikephil.charting.charts.BarChart mChart -> g
    float xAxisIntervals -> h
    java.util.ArrayList xVals -> i
    java.util.ArrayList yVals1 -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void access$0(mmmobile.android.Home) -> a
    ca.uol.aig.fftpack.RealDoubleFFT access$1(mmmobile.android.Home) -> b
    void access$2(mmmobile.android.Home,double[]) -> a
mmmobile.android.Home$AnalyseAudioTask -> mmmobile.android.a:
    int bufferSize -> a
    android.media.AudioRecord audioRecord -> b
    short[] buffer -> c
    double[] toTransform -> d
    mmmobile.android.Home this$0 -> e
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground$10299ca() -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
mmmobile.android.MmActivity -> mmmobile.android.MmActivity:
    mmmobile.android.MmApplication mmApplication -> k
    void onCreate$5e6cff92$3d29085c(android.os.Bundle) -> a
    void onStart() -> onStart
    void onStop() -> onStop
    void onClick(android.view.View) -> onClick
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onUserInteraction() -> onUserInteraction
mmmobile.android.MmApplication -> mmmobile.android.MmApplication:
    android.app.Activity currentActivity -> a
    java.util.HashMap activityStates -> b
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
    void setActivityState(java.lang.Class,boolean) -> a
    void setCurrentActivity(android.app.Activity) -> a
